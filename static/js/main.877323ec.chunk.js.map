{"version":3,"sources":["store/reducers/systemReducer.js","store/reducers/cityReducer.js","store/reducers/themeReducer.js","store/reducers/temperatureScaleReducer.js","store/reducers/index.js","store/store.js","services/storageService.js","services/cityService.js","store/actions/cityActions.js","store/actions/systemActions.js","services/weatherService.js","cmps/buttons/HeartBtnIcon.jsx","cmps/Search.jsx","cmps/TemperaturePreview.jsx","utils/getWeatherIcons.js","cmps/weather-details-cmps/WeatherCardPreview.jsx","cmps/buttons/FavoriteBtn.jsx","utils/getCurrentDate.js","cmps/weather-details-cmps/ForecastPreview.jsx","cmps/weather-details-cmps/ForecastList.jsx","store/actions/temperatureScaleActions.js","cmps/buttons/TemperatureConversionBtn.jsx","cmps/CircularProgressBar.jsx","utils/formatAMPM.js","cmps/Loader.jsx","pages/WeatherDetails.jsx","services/themeService.js","cmps/FavoritePreview.jsx","cmps/FavoriteList.jsx","routes.js","pages/FavoriteCitys.jsx","store/actions/themeActions.js","cmps/buttons/ThemeToggleBtn.jsx","cmps/Navbar.jsx","cmps/MobileNavbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","isLoading","favoriteCitys","currCity","_id","name","country","key","themeState","temperatureScale","rootReducer","combineReducers","system","state","action","type","city","citys","theme","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","gCitys","storageService","loadFromStorage","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","KEY","cityService","query","getById","cityId","find","_city","Promise","resolve","save","filter","toast","success","position","POSITION","BOTTOM_LEFT","newCity","_makeid","_add","a","length","text","possible","i","charAt","Math","floor","random","loadFavoriteCitys","dispatch","console","log","error","updateFavoriteCitys","updateCurrCity","err","API_KEY","weatherService","getAutoComplete","fetch","getCurrentCityConditions","getForecastFromCity","getCurrLocation","getHourlyFrecast","cityKey","status","res","HeartBtnIcon","isActive","size","className","Search","useSelector","useState","citysData","setCitysData","useDispatch","history","useHistory","inputRef","useRef","ev","target","value","then","data","json","autoCompleteData","getCurrentStyle","Key","onToggleLocation","e","cityData","LocalizedName","Country","preventDefault","stopPropagation","onGetCityDetails","push","useEffect","ref","onChange","placeholder","map","idx","CityDataPreview","setisActive","isIncludsCity","onClick","Temperature","celsius","currentTextSize","round","getWeatherIcon","weatherIcon","getParamImg","paramName","includes","WeatherCardPreview","currentCityData","weatherText","temperature","realFeelTemperature","src","alt","srcSet","FavoriteBtn","HeartButtonText","getForecastDate","day","d","Date","date","getDate","monthName","getMonth","getForecastDayNameShort","getDay","ForecastPreview","dailyForecast","Day","Icon","ShortPhrase","Maximum","Value","Minimum","AirAndPollen","WindGust","Speed","RealFeelTemperature","TotalLiquid","ForecastList","dailyForecastsData","updateTemperatureScale","TemperatureConversionBtn","checked","CircularProgressBar","param","getParamValue","txt","unit","formatAMPM","hours","getHours","minutes","getMinutes","ampm","Loader","gThemeState","WeatherDetails","setCurrentCityData","setDailyForecastsData","hourlyForecastData","setHourlyForecatsData","setStatus","location","useLocation","response","parseInt","fetchCurrentLocation","getLocation","pathname","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","watchPosition","getCurrLocaion","WeatherText","WeatherIcon","Metric","temperatureParams","UVIndex","UVIndexText","RelativeHumidity","PrecipitationSummary","Precipitation","Unit","fetchCurrentCityConditions","DailyForecasts","fetchDailyForecast","fetchHourlyForecast","Location","months","monthIndex","dayName","formatDate","TemperatureParam","TemperatureParamDesktop","HourlyForecast","hourDate","DateTime","IconPhrase","FavoritePreview","setCityData","isOpen","setIsOpen","modalRef","currData","current","focus","p","tabIndex","onBlur","onRemoveLocation","FavoriteList","routes","path","component","themeService","newThemeState","loadTheme","ThemeToggleBtn","updateTheme","Navbar","offset","setOffset","getWidth","innerWidth","document","documentElement","clientWidth","body","useCurrentWidth","width","setWidth","resizeListener","addEventListener","removeEventListener","onscroll","pageYOffset","to","MobileNavbar","App","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.877323ec.chunk.js","sourcesContent":["const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    favoriteCitys: [],\r\n    currCity:{\r\n        _id:'2154402',\r\n        name:'Tel Aviv',\r\n        country:'Israel',\r\n        key:2154402\r\n    }\r\n}\r\n\r\nexport function cityReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_FAVORITE_CITYS':\r\n            return {\r\n                ...state,\r\n                favoriteCitys: action.citys\r\n            }\r\n        case 'SET_CURRENT_CITY':\r\n            return {\r\n                ...state,\r\n                currCity: action.city\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    themeState: false\r\n}\r\n\r\nexport function themeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_THEME':\r\n            return {\r\n                ...state,\r\n                themeState: action.themeState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    temperatureScale: 'celsius'\r\n}\r\n\r\nexport function temperatureScaleReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_SCALE':\r\n            return {\r\n                ...state,\r\n                temperatureScale: action.temperatureScale\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {systemReducer} from './systemReducer';\r\nimport { cityReducer } from './cityReducer';\r\nimport { themeReducer } from './themeReducer';\r\nimport { temperatureScaleReducer } from './temperatureScaleReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  city: cityReducer,\r\n  theme: themeReducer,\r\n  temperatureScale: temperatureScaleReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from \"./storageService\"\r\nimport { toast } from 'react-toastify';\r\n\r\nconst KEY = 'CITYS';\r\nlet gCitys;\r\n\r\nexport const cityService = {\r\n    query,\r\n    getById,\r\n    save\r\n}\r\n\r\n\r\nasync function query() {\r\n    gCitys = await storageService.loadFromStorage(KEY)\r\n    if(!gCitys){\r\n        gCitys = []\r\n        storageService.saveToStorage(KEY, gCitys)\r\n    }\r\n    return gCitys\r\n}\r\n\r\n\r\nfunction getById(cityId) {\r\n    if(gCitys){\r\n        const city = gCitys.find(_city => _city._id === cityId)\r\n        return Promise.resolve(city)\r\n    }\r\n}\r\n\r\n\r\nfunction save(city) {\r\n    const isIncludsCity = gCitys.filter(_city=>_city.key===city.key)[0]\r\n    if(isIncludsCity){\r\n        //remove\r\n        _remove(city.key)\r\n        toast.success(`${city.name} deleted from favorite list`, { position: toast.POSITION.BOTTOM_LEFT })\r\n    }else{\r\n        //add\r\n        _add(city)\r\n        toast.success(`${city.name} added to favorite list`, { position: toast.POSITION.BOTTOM_LEFT })\r\n    }\r\n    storageService.saveToStorage(KEY, gCitys)\r\n    return gCitys\r\n}\r\n\r\n\r\nfunction _add(city) {\r\n    const newCity = {\r\n        _id:_makeid(),\r\n        ...city\r\n    }\r\n    gCitys = [newCity, ...gCitys]\r\n}\r\n\r\nfunction _remove(key) {\r\n    gCitys = gCitys.filter(_city=>\r\n        _city.key !== key\r\n    )\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { cityService } from '../../services/cityService'\r\nimport { loading, doneLoading } from './systemActions';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function loadFavoriteCitys() {\r\n  \r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const citys = await cityService.query();\r\n            dispatch({ type: 'SET_FAVORITE_CITYS', citys })\r\n        }catch(err){\r\n            console.log('err in loading citys', err);\r\n            toast.error('Unable to loade citys', { position: toast.POSITION.BOTTOM_LEFT })\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateFavoriteCitys(city) {\r\n  return async dispatch => {\r\n      try{\r\n        const citys = await cityService.save(city)\r\n        dispatch({ type: 'SET_FAVORITE_CITYS', citys})\r\n      }catch(err){\r\n        toast.error('Unable to update fav citys', { position: toast.POSITION.BOTTOM_LEFT })\r\n        console.log('err in updating citys', err); \r\n      }\r\n  }\r\n}\r\n\r\n\r\nexport function updateCurrCity(city) {//with geolocatin \r\n\r\n  return async dispatch => {\r\n      try{\r\n          dispatch({ type: 'SET_CURRENT_CITY', city})\r\n      }catch(err){\r\n          console.log('err in updating city', err); \r\n          toast.error('Unable to update city', { position: toast.POSITION.BOTTOM_LEFT })\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","const API_KEY = 'CZ13GHY2jWdYl7j6RgDnZPwziByaSaex'\r\n\r\nexport const weatherService = {\r\n    getAutoComplete,\r\n    getCurrentCityConditions,\r\n    getForecastFromCity,\r\n    getCurrLocation,\r\n    getHourlyFrecast\r\n}\r\n\r\nasync function getCurrLocation(status) {\r\n    const res =  fetch(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${status}`\r\n    )\r\n    return res\r\n}\r\n\r\nfunction getHourlyFrecast(cityKey) {\r\n    const res =  fetch(\r\n        `https://dataservice.accuweather.com/forecasts/v1/hourly/12hour/${cityKey}?apikey=${API_KEY}&details=true&metric=true`\r\n    )\r\n    return res\r\n}\r\n\r\nasync function getForecastFromCity(cityKey) {\r\n   const res = fetch(\r\n        `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${API_KEY}&details=true&metric=true`\r\n    )\r\n    return res\r\n}\r\n\r\nasync function getCurrentCityConditions(cityKey) {\r\n    const res = fetch(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API_KEY}&details=true`\r\n    )\r\n    return res\r\n}\r\n\r\nfunction getAutoComplete(query) {\r\n    const res = fetch(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\n    )\r\n    return res\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const HeartBtnIcon = ({isActive,size}) => {\r\n\r\n    return (\r\n        <div \r\n        className={`heart ${isActive?'active':''}`}\r\n        >\r\n            <div className={`heart-flip ${size?size:''}`}></div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadFavoriteCitys,updateFavoriteCitys,updateCurrCity} from \"../store/actions/cityActions\";\r\nimport { weatherService } from \"../services/weatherService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HeartBtnIcon } from \"./buttons/HeartBtnIcon\";\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function Search() {\r\n\r\n    const favoriteCitys = useSelector(state => state.city.favoriteCitys);    \r\n    const themeState = useSelector(state => state.theme.themeState); \r\n \r\n    const [citysData, setCitysData] = useState([]);\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const inputRef = useRef()\r\n \r\n    \r\n    async function getAutoComplete(ev) {\r\n        if( ev.target.value.length===0 ){\r\n            setCitysData([]);\r\n        }\r\n        if(ev.target.value.length>2){\r\n            try {\r\n                const autoCompleteData = await weatherService.getAutoComplete(ev.target.value)\r\n                    .then (data => data.json())\r\n                    .then (data => {\r\n                        return data\r\n                    })\r\n                setCitysData(autoCompleteData)\r\n            } catch (error) {\r\n                setCitysData([]);\r\n                toast.error(\"Failed auto complete\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in get citys from AutoComplete', error);\r\n            }\r\n        }\r\n    }\r\n  \r\n\r\n    useEffect(() => {\r\n        dispatch(loadFavoriteCitys())\r\n    }, [dispatch])    \r\n    \r\n\r\n    function getCurrentStyle(Key) {\r\n        if(favoriteCitys&&favoriteCitys.length>0){\r\n            const isIncludsCity = favoriteCitys.filter(city=>city.key===Key)[0]\r\n            if(isIncludsCity){\r\n                return 'includes'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onToggleLocation(e,cityData) {\r\n        const data = {\r\n            name:cityData.LocalizedName,\r\n            country:cityData.Country.LocalizedName,\r\n            key:cityData.Key\r\n        }\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        dispatch(updateFavoriteCitys(data)) \r\n    }    \r\n    \r\n    function onGetCityDetails(cityData) {\r\n        const data = {\r\n            name:cityData.LocalizedName,\r\n            country:cityData.Country.LocalizedName,\r\n            key:cityData.Key\r\n        }\r\n\r\n        dispatch(updateCurrCity(data)) \r\n        history.push(`/${data.name}`)\r\n    }\r\n\r\n    return (\r\n        <div className='search flex column justify-center'>\r\n            <div className=\"search-title\">Search for city</div>\r\n            <input \r\n            className={`search-input ${themeState?'dark':''}`}\r\n            type=\"search\"  \r\n            ref={inputRef}\r\n            onChange={getAutoComplete}\r\n            placeholder='Enter at least 2 letters to start..'\r\n            />\r\n            {citysData.length>0&&\r\n                <div className={`city-list ${citysData.length>0?'full':''}`}>\r\n                   <div className=\"city-list-scroll-wrapper\">\r\n                   {\r\n                        citysData.map((cityData,idx)=>\r\n                            <CityDataPreview\r\n                            key={idx} \r\n                            cityData={cityData}\r\n                            getCurrentStyle={getCurrentStyle}\r\n                            onGetCityDetails={onGetCityDetails}\r\n                            onToggleLocation={onToggleLocation}\r\n                            favoriteCitys={favoriteCitys}\r\n                            />\r\n                        )\r\n                    }\r\n                   </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction CityDataPreview({favoriteCitys,cityData,getCurrentStyle,onGetCityDetails,onToggleLocation}) {\r\n\r\n    const [isActive, setisActive] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const isIncludsCity = favoriteCitys.filter(_city=>_city.key===cityData.Key)[0]\r\n       if(isIncludsCity){\r\n        setisActive(true)\r\n       }else{\r\n        setisActive(false)\r\n       }\r\n    }, [cityData,favoriteCitys])\r\n\r\n\r\n    return ( \r\n    <div className={`city-data-preview flex  place-center ${getCurrentStyle(cityData.Key)}`} onClick={()=>onGetCityDetails(cityData)}>\r\n       <div className='flex search-name-result'>\r\n            <div className='margin-right-5px'>{cityData.LocalizedName}, </div>\r\n            <div className='country'>{cityData.Country.LocalizedName}</div>\r\n       </div>\r\n        <div onClick={(e)=>{onToggleLocation(e,cityData)}}>\r\n            <HeartBtnIcon isActive={isActive} size={'small'}/>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Temperature = ({value,currentTextSize}) => {\r\n\r\n    const temperatureScale = useSelector(state => state.temperatureScale.temperatureScale);  \r\n\r\n    function convertToF(celsius) {\r\n        let fahrenheit = (celsius * 9/5) + 32;\r\n        return fahrenheit\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            <span className='temperature-value'>\r\n                { temperatureScale==='celsius'&& Math.round(value) }\r\n                { temperatureScale==='fahrenheit'&& Math.round(convertToF(value)) }\r\n            </span> \r\n            <span className='temperature-unit'>\r\n                { temperatureScale==='celsius'&& <>&#176;</> }\r\n                { temperatureScale==='fahrenheit'&& <span className={`${currentTextSize?'':'fs-for-temp-scale'}`}>&#8457;</span> }\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import {RiWindyLine} from 'react-icons/ri'\r\nimport {WiHumidity} from 'react-icons/wi'\r\nimport {BiSun} from 'react-icons/bi'\r\nimport {GiDroplets} from 'react-icons/gi'\r\n\r\nexport function getWeatherIcon(weatherIcon){\r\n    switch (weatherIcon) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199308/OIH57D1.eps_crop__1_-removebg-preview_g3qwv5.png\";  \r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n        case 19:\r\n        case 20:\r\n        case 38:\r\n        case 43:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199333/OIH57D1.eps_crop__2_-removebg-preview_oclptj.png\";  \r\n        case 11:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199333/OIH57D1.eps_crop__2_-removebg-preview_oclptj.png\"; \r\n        case 12:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199371/OIH57D1.eps_crop__4_-removebg-preview_gnl9n6.png\"; \r\n        case 13:\r\n        case 14:\r\n        case 39:\r\n        case 40:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199391/OIH57D1.eps_crop__3_-removebg-preview_eicsqk.png\";  \r\n        case 15:\r\n        case 16:\r\n        case 17:\r\n        case 41:\r\n        case 42:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622039606/OIH57D1.eps_crop-removebg-preview_dx3n3o.png\"; \r\n        case 18:\r\n        case 25:\r\n        case 26:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199420/OIH57D1.eps_crop__5_-removebg-preview_nazxov.png\"; \r\n        case 22:\r\n        case 29:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199442/OIH57D1.eps_crop__7_-removebg-preview_ow6llf.png\"; \r\n        case 23:\r\n        case 44:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199464/OIH57D1.eps_crop__6_-removebg-preview_meirie.png\"; \r\n        case 24:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199478/OIH57D1.eps_crop__13_-removebg-preview_ilfsnl.png\";  \r\n        case 30:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199496/OIH57D1.eps_crop__12_-removebg-preview_tiqmlu.png\"; \r\n        case 31:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199496/OIH57D1.eps_crop__12_-removebg-preview_tiqmlu.png\";\r\n        case 32:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199523/OIH57D1.eps_crop__15_-removebg-preview_lw0ij6.png\"; \r\n            // return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199544/OIH57D1.eps_crop__14_-removebg-preview_wkh9ec.png\";   \r\n        case 33:\r\n        case 34:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199561/OIH57D1.eps_crop__11_-removebg-preview_ywo1lm.png\"  \r\n        case 35:\r\n        case 36:\r\n        case 37:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199575/OIH57D1.eps_crop__9_-removebg-preview_beblpw.png\";\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function getParamImg(paramName) {\r\n    switch (true) {\r\n        case paramName.includes('UV'):\r\n            return <BiSun/>\r\n        case paramName.includes('Humidity'):\r\n           return <WiHumidity/>       \r\n        case paramName.includes('Wind'):\r\n           return <RiWindyLine/>\r\n        case paramName.includes('Precipitation'):\r\n        case paramName.includes('Liquid'):\r\n           return <GiDroplets/>\r\n        default:\r\n            break;\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Temperature } from \"../TemperaturePreview\";\r\nimport { getWeatherIcon } from \"../../utils/getWeatherIcons\";\r\n\r\nexport const WeatherCardPreview = ({currentCityData}) => {\r\n    \r\n    const {weatherIcon,weatherText,temperature,realFeelTemperature} = currentCityData\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n\r\n    return (\r\n       <div className='weather-card-preview flex'>\r\n           <div className=\"weather-text bold-600 title-txt\">{weatherText}</div>\r\n           <div className=\"temperature-wrapper flex\">\r\n               <div className=\"current-temperature\">\r\n                    <Temperature value={temperature}/>\r\n               </div>\r\n               <div className=\"real-feel-temperature under-title-small-txt bold-600 \">\r\n                    <span>Feels like </span>\r\n                    <span className='real-feel-value'>\r\n                        <Temperature value={realFeelTemperature} currentTextSize={true}/>\r\n                    </span>\r\n               </div>\r\n           </div>\r\n           <div className=\"weather-icon\">\r\n               <img src={getWeatherIcon(weatherIcon)} alt=\"\" srcSet=\"\" />   \r\n               <div className={`img-shadow ${themeState?\"dark-theme\":\"light-theme\"}`}></div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateFavoriteCitys } from \"../../store/actions/cityActions\";\r\nimport { HeartBtnIcon } from \"./HeartBtnIcon\";\r\nexport const FavoriteBtn = ({currCity}) => {\r\n\r\n    const favoriteCitys = useSelector(state => state.city.favoriteCitys);    \r\n    const [isActive, setisActive] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const isIncludsCity = favoriteCitys.filter(_city=>_city.key===currCity.key)[0]\r\n       if(isIncludsCity){\r\n        setisActive(true)\r\n       }else{\r\n        setisActive(false)\r\n       }\r\n    }, [currCity,favoriteCitys])\r\n\r\n    function onUpdateFavoriteList() {\r\n         //favoriteCitys updated and updates the isActive value\r\n        dispatch(updateFavoriteCitys(currCity)) \r\n    }\r\n\r\n    return (\r\n        <div \r\n        className='favorite-btn'\r\n        onClick={onUpdateFavoriteList}\r\n        >\r\n            <div className=\"desktop-view-btn\">\r\n                <HeartButtonText isActive={isActive}/>\r\n            </div>\r\n            <div className='mobile-view-btn'>\r\n                <HeartBtnIcon isActive={isActive}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HeartButtonText = ({isActive}) => {\r\n\r\n    return (\r\n        <div \r\n        className={`heart-button ${isActive?'active':''}`}\r\n        >\r\n            <div className=\"heart-flip\"></div>\r\n            <span>{isActive?'Added to':'Add to'} favorite</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export function getForecastDayName(day){\r\n    const d = new Date(day)\r\n    const days = [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday'\r\n    ]\r\n\r\n    const dayName = days[d.getDay()] \r\n    return dayName\r\n}\r\nexport function getForecastDate(day){\r\n    const d = new Date(day)\r\n    const date = d.getDate()\r\n    const months = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ]\r\n    \r\n    const monthIndex = d.getMonth()\r\n    const monthName = months[monthIndex]\r\n    const formatted = `${date} ${monthName}`\r\n    return formatted\r\n}\r\nexport function getForecastDayNameShort(day){\r\n    const d = new Date(day)\r\n    const days = [\r\n        'S',\r\n        'M',\r\n        'T',\r\n        'W',\r\n        'T',\r\n        'F',\r\n        'S'\r\n    ]\r\n\r\n    const dayName = days[d.getDay()] \r\n    return dayName\r\n}\r\nexport function getCurrentDate(){\r\n\r\n    const d = new Date()\r\n    formatDate(d)\r\n}\r\n\r\nfunction formatDate(d) {\r\n    const date = d.getDate()\r\n    const months = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ]\r\n    \r\n    const monthIndex = d.getMonth()\r\n    const monthName = months[monthIndex]\r\n\r\n    const days = [\r\n        'Sun',\r\n        'Mon',\r\n        'Tue',\r\n        'Wed',\r\n        'Thu',\r\n        'Fri',\r\n        'Sat'\r\n    ]\r\n\r\n    const dayName = days[d.getDay()] \r\n    const formatted = `${dayName}, ${date} ${monthName}`\r\n    return formatted\r\n}","import React from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { Temperature } from \"../TemperaturePreview\";\r\nimport {getForecastDayName, getForecastDate, getForecastDayNameShort} from \"../../utils/getCurrentDate\";\r\nimport { getWeatherIcon,getParamImg } from \"../../utils/getWeatherIcons\";\r\nimport {FaTemperatureHigh } from \"react-icons/fa\";\r\n\r\nexport const ForecastPreview = ({dailyForecast}) => {\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n\r\n    return (\r\n        <div className={`card-type-2 ${themeState?'':'light-theme'} day-forecast-preview`} >\r\n\r\n            <div className='desktop'>\r\n                <div className='flex column place-center'>\r\n                    <div className='flex column place-center'>\r\n                        <div className={`flex column place-center ${themeState?'lightClr':''}`}>\r\n                            <div className='title-txt'>\r\n                                {getForecastDayName(dailyForecast.Date)}\r\n                            </div>\r\n                            <div className='fs11'>\r\n                                {getForecastDate(dailyForecast.Date)}\r\n                            </div>\r\n                        </div>\r\n                        <div className='day-icon'>\r\n                            <img src={getWeatherIcon(dailyForecast.Day.Icon)} alt=\"\" srcSet=\"\" />   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div  \r\n                className={`weather-text title-txt text-center ${themeState?'lightClr':''}`} >\r\n                    {dailyForecast.Day.ShortPhrase}\r\n                </div>\r\n                <div className=\"flex width-full space-evenly\">\r\n                    <div className='day-temperature max bold-700 fs30'>\r\n                        <Temperature currentTextSize={true} value={dailyForecast.Temperature.Maximum.Value}/>\r\n                    </div>\r\n                    <div className='day-temperature min bold-700 fs30'>\r\n                        <Temperature currentTextSize={true} value={dailyForecast.Temperature.Minimum.Value}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"temperature-params forecast\">\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\">{ getParamImg('UV')}</span>\r\n                            <span>UV:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}>{dailyForecast.AirAndPollen[5].Value}/10</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\">{ getParamImg('Wind')}</span>\r\n                            <span>Wind:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}>{dailyForecast.Day.WindGust.Speed.Value} km/h</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\"><FaTemperatureHigh/></span><span>Real Feel:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}> \r\n                            <Temperature currentTextSize={true} value={dailyForecast.RealFeelTemperature.Maximum.Value}/>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\">{ getParamImg('Liquid')}</span>\r\n                            <span>Total Liquid:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}>{dailyForecast.Day.TotalLiquid.Value} mm</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='mobile flex column place-center justify-center'>\r\n                <div className='day-letter'>{getForecastDayNameShort(dailyForecast.Date)}</div>\r\n                <div className='day-icon'>\r\n                    <img src={getWeatherIcon(dailyForecast.Day.Icon)} alt=\"\" srcSet=\"\" />   \r\n                </div>\r\n                <div className='day-temperature bold-700'>\r\n                    <Temperature value={dailyForecast.Temperature.Maximum.Value} currentTextSize={true}/>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { ForecastPreview } from \"./ForecastPreview\";\r\n\r\nexport const ForecastList = ({dailyForecastsData}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bold-700 title-txt\">Next 5 Days</div>\r\n            <div className='daily-forecasts'>\r\n                {\r\n                    dailyForecastsData.map( (dailyForecast,idx)=> \r\n                        <ForecastPreview key={idx} day={'M'} dailyForecast={dailyForecast}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { toast } from 'react-toastify';\r\n\r\nexport function updateTemperatureScale(temperatureScale) {\r\n  return async dispatch => {\r\n      try{\r\n          dispatch({ type: 'SET_SCALE', temperatureScale})\r\n      }catch(err){\r\n          console.log('err in updating temperature scale', err); \r\n          toast.error('Unable to update temperature scale', { position: toast.POSITION.BOTTOM_LEFT })\r\n      }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateTemperatureScale } from \"../../store/actions/temperatureScaleActions\";\r\n\r\nexport function TemperatureConversionBtn() {\r\n\r\n    const temperatureScale = useSelector(state => state.temperatureScale.temperatureScale);  \r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    const dispatch = useDispatch()\r\n\r\n    function onUpdateTemperatureScale() {\r\n        if(temperatureScale==='celsius'){\r\n            dispatch(updateTemperatureScale('fahrenheit'))\r\n        }else{\r\n            dispatch(updateTemperatureScale('celsius'))\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"conversion-btn-wrapper width-full flex\">\r\n            <input \r\n            type=\"checkbox\" \r\n            className={`temperature-conversion-btn ${themeState?'dark':''}`}\r\n            onChange={onUpdateTemperatureScale}\r\n            checked={temperatureScale!=='celsius'?true:false}\r\n            >   \r\n            </input>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getParamImg } from \"../utils/getWeatherIcons\";\r\n\r\nexport function CircularProgressBar({param}) {\r\n\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n\r\n    function getParamValue() {\r\n        switch (true) {\r\n            case param.name.includes('UV'):\r\n                return  param.value*10\r\n            case param.name.includes('Humidity'):\r\n               return param.value       \r\n            case param.name.includes('Wind'):\r\n                return param.value       \r\n            case param.name.includes('Precipitation'):\r\n                return param.value       \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"param-progress-bar width-fit flex column place-center\">\r\n            <div className=\"title-text flex\"><div className='margin-right-7px'>{param.name}</div><div className=\"fs18\">{getParamImg(param.name)}</div></div>\r\n            <div className={`progress-circle ${getParamValue()>50?'over50':''}  p${getParamValue()} ${themeState?'dark':''}`}>\r\n                <div className={`flex ${param.txt?'column':''}`}>\r\n                    <span>{param.value}{param.unit}</span>\r\n                </div>\r\n                <div className=\"left-half-clipper\">\r\n                   <div className=\"first50-bar\"></div>\r\n                   <div className=\"value-bar\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export function formatAMPM(val) {\r\n    var date = new Date(val)\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    var strTime = hours + ':' + minutes + ' ' + ampm;\r\n    return strTime;\r\n}","import React from \"react\";\r\n\r\nexport function Loader() {\r\n    return(\r\n        <div className=\"loading-wrapper\">\r\n            <div className=\"loading-text\">LOADING</div>\r\n            <div className=\"loading-content\"></div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { updateCurrCity } from \"../store/actions/cityActions\";\r\nimport { Search } from \"../cmps/Search\";\r\nimport { WeatherCardPreview } from \"../cmps/weather-details-cmps/WeatherCardPreview\";\r\nimport { FavoriteBtn } from \"../cmps/buttons/FavoriteBtn\";\r\nimport { ForecastList } from \"../cmps/weather-details-cmps/ForecastList\";\r\nimport { weatherService } from \"../services/weatherService\";\r\nimport { getCurrentDate } from '../utils/getCurrentDate'\r\nimport { getParamImg,getWeatherIcon } from \"../utils/getWeatherIcons\";\r\nimport { TemperatureConversionBtn } from \"../cmps/buttons/TemperatureConversionBtn\";\r\nimport { Temperature } from \"../cmps/TemperaturePreview\";\r\nimport { CircularProgressBar } from \"../cmps/CircularProgressBar\";\r\nimport { formatAMPM } from \"../utils/formatAMPM\"\r\nimport { toast } from 'react-toastify';\r\nimport { Loader } from \"../cmps/Loader\";\r\n\r\nexport const WeatherDetails = () => {\r\n \r\n    const currCity = useSelector(state => state.city.currCity);\r\n\r\n    const [currentCityData, setCurrentCityData] = useState(null)\r\n    const [dailyForecastsData, setDailyForecastsData] = useState([])\r\n    const [hourlyForecastData, setHourlyForecatsData] = useState([])\r\n    const [status, setStatus] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n\r\n    function getCurrLocaion() {\r\n        try {\r\n            function success(position) {\r\n                const latitude  = position.coords.latitude;\r\n                const longitude = position.coords.longitude;\r\n                setStatus(`${latitude},${longitude}`);\r\n              }\r\n          \r\n              function error() {\r\n                setStatus(null);\r\n                  toast.error('Unable to retrieve your location', { position: toast.POSITION.BOTTOM_LEFT })\r\n                  if(location.pathname === '/'&&currCity){\r\n                      history.push(`/${currCity.name}`)\r\n                  }\r\n              }\r\n          \r\n              if(!navigator.geolocation) {\r\n                setStatus(null);\r\n                toast.error('Geolocation is not supported by your browser', { position: toast.POSITION.BOTTOM_LEFT })\r\n              } else {\r\n                navigator.geolocation.getCurrentPosition(success, error);\r\n              }\r\n          \r\n        } catch (error) {\r\n            const watchId = navigator.geolocation.watchPosition(position => {\r\n                setStatus(`${position.coords.latitude},${position.coords.longitude}`);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(status){\r\n            getLocation()\r\n        }\r\n        function getLocation() {\r\n            if(status){\r\n                async function fetchCurrentLocation() {\r\n                    const response = await weatherService.getCurrLocation(status).then(data => data.json()).then(data => {\r\n                        return data\r\n                    })    \r\n                    const city  =  {\r\n                        _id: `${response.Key}`,\r\n                        name:response.LocalizedName,\r\n                        key:parseInt(response.Key),\r\n                        country:response.Country.LocalizedName\r\n                    }\r\n                    dispatch(updateCurrCity(city))\r\n                    history.push(`/${city.name}`)      \r\n                }\r\n                fetchCurrentLocation()\r\n            }\r\n        }\r\n    }, [status,history,dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if(location.pathname === '/'){\r\n            try {\r\n                getCurrLocaion() \r\n            } catch (error) {\r\n                toast.error(\"Failed to get location\", { position: toast.POSITION.BOTTOM_LEFT })\r\n            }\r\n        }else{\r\n            try {\r\n                async function fetchCurrentCityConditions() {    \r\n                    const response = await weatherService.getCurrentCityConditions(currCity.key).then (data => data.json()).then (data => {\r\n                        return data[0]\r\n                    })  \r\n                    let cityData\r\n                    if(response){\r\n                        cityData = {\r\n                            weatherText:response.WeatherText,\r\n                            weatherIcon:response.WeatherIcon,\r\n                            temperature:response.Temperature.Metric.Value,\r\n                            realFeelTemperature:response.RealFeelTemperature.Metric.Value,\r\n                            temperatureParams:[\r\n                                {\r\n                                    name:'UV Index',\r\n                                    value:response.UVIndex,\r\n                                    unit: '/10',\r\n                                    txt:response.UVIndexText\r\n                                },\r\n                                {\r\n                                    name:'Humidity',\r\n                                    value: response.RelativeHumidity,\r\n                                    unit: '%'\r\n                                },\r\n                                {\r\n                                    name:'Wind Gust',\r\n                                    value:response.WindGust.Speed.Metric.Value,\r\n                                    unit: 'km/h'\r\n                                },\r\n                                {\r\n                                    name:'Precipitation',\r\n                                    value:response.PrecipitationSummary.Precipitation.Metric.Value,\r\n                                    unit: response.PrecipitationSummary.Precipitation.Metric.Unit\r\n                                }\r\n                            ]\r\n                        };\r\n                    }             \r\n                    setCurrentCityData(cityData)\r\n                }\r\n                fetchCurrentCityConditions();\r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch current conditions\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in getting current city conditions', error);\r\n            }\r\n\r\n            try {\r\n                async function fetchDailyForecast() {                   \r\n                    const response = await weatherService.getForecastFromCity(currCity.key).then (data => data.json()).then (data => {\r\n                       return data.DailyForecasts\r\n                    })\r\n                    setDailyForecastsData(response)\r\n               }\r\n               fetchDailyForecast(); \r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch daily forecast\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in getting daily forecast', error);\r\n            }\r\n\r\n            try {\r\n                async function fetchHourlyForecast() {                   \r\n                    const response = await weatherService.getHourlyFrecast(currCity.key).then (data => data.json()).then (data => {\r\n                        return data\r\n                     })\r\n                    setHourlyForecatsData(response)\r\n                }\r\n                fetchHourlyForecast(); \r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch hourly forecast\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in getting hourly forecast', error);\r\n            }\r\n        }\r\n        return () => {\r\n            setCurrentCityData(null)\r\n            setDailyForecastsData([])\r\n            setHourlyForecatsData([])\r\n        }\r\n    }, []); \r\n\r\n    \r\n\r\n    if(!currentCityData&&dailyForecastsData.length===0&&hourlyForecastData.length===0) return <Loader/>\r\n    return (\r\n       <div className=\"weather-details\">\r\n            <div className=\"desktop-search\"><Search/></div>\r\n\r\n            <div className=\"inner-container\">\r\n                <div className='current-details-section'>\r\n\r\n                    <div className='flex space-between full'>\r\n                        <Location currCity={currCity}/>\r\n\r\n                        <TemperatureParamDesktop currentCityData={currentCityData}/>\r\n\r\n                        <FavoriteBtn currCity={currCity}/>\r\n                    </div>\r\n                    <div className=\"current-conditions-container\">\r\n                        <WeatherCardPreview\r\n                        currentCityData={currentCityData}\r\n                        />\r\n\r\n                    {currentCityData.temperatureParams&&\r\n                       <div className=\"flex space-evenly temperature-params\">\r\n                           {currentCityData.temperatureParams.map((param, idx)=>\r\n                                <TemperatureParam key={idx} param={param}/>\r\n                            )}\r\n                       </div>\r\n                    }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <TemperatureConversionBtn/>\r\n                \r\n                <HourlyForecast hourlyForecastData={hourlyForecastData}/>\r\n                \r\n                <ForecastList dailyForecastsData={dailyForecastsData}/>\r\n                \r\n                \r\n            </div>\r\n\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nconst Location = ({currCity}) => {\r\n    return (\r\n        <div className=\"location flex column\">\r\n            <div className='city bold-800 title-txt'>{currCity.name},</div>\r\n            <div className='country bold-800 title-txt'>{currCity.country}</div>\r\n            <div className='date under-title-small-txt'>{getCurrentDate()}</div>\r\n        </div>\r\n    )\r\n}\r\nconst TemperatureParam = ({param}) => {\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n    return (\r\n        <div className=\"temperature-param flex column\">\r\n            <div className={`card-type-2 flex place-center justify-center ${themeState?'dark-theme':''} temperature-value `}>\r\n                <div className='icon mobile flex place-center justify-center'>\r\n                   { getParamImg(param.name)}\r\n                </div>\r\n            </div>\r\n            <div className={`fs12 bold-700 ${themeState?'dark-theme':''}`}>{param.value}{param.unit}</div>\r\n        </div>\r\n    )\r\n}\r\nconst TemperatureParamDesktop = ({currentCityData}) => { \r\n    return (\r\n        <div className='temperatureParams-desktop-wrapper flex'>\r\n        {currentCityData.temperatureParams.map((param, idx)=>\r\n            <CircularProgressBar key={idx} param={param}/>\r\n        )}\r\n       </div>\r\n    )\r\n}\r\nconst HourlyForecast = ({hourlyForecastData}) => { \r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    return (\r\n        <div className='hourly-forecast-wrapper'>\r\n            <div className=\"bold-700 title-txt margin-bottom-10px\">Today</div>\r\n                <div className={`grid hourly-forecast-list width-full space-between ${themeState?'dark':''}`}>\r\n                {\r\n                    hourlyForecastData.map(\r\n                        (hourDate,idx) =>\r\n                        <div key={idx} className={`flex column place-center hourly-forecast-preview ${themeState?'dark':''}`}>\r\n                           <div className=\"clr2\">{formatAMPM(hourDate.DateTime)}</div>\r\n                           <div className='icon-img flex place-center justify-center'>\r\n                                <img src={getWeatherIcon(hourDate.WeatherIcon)} alt=\"\" srcSet=\"\" />   \r\n                            </div>\r\n                            <div className=\"flex place-baseline\">\r\n                                <div className=\"title-txt margin-right-5px\">\r\n                                    <Temperature currentTextSize={true} value={hourDate.Temperature.Value}/>\r\n                                    </div>\r\n                                <div className=\"fs11\">\r\n                                    <Temperature currentTextSize={true} value={hourDate.RealFeelTemperature.Value}/>\r\n                                </div>\r\n                            </div>\r\n                           <div className={`text-center word-break ${themeState?'clr4':'clr6'}`}>{hourDate.IconPhrase}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import { storageService } from \"./storageService\"\r\n\r\nconst KEY = 'THEME_STATE';\r\nlet gThemeState;\r\n\r\nexport const themeService = {\r\n    query,\r\n    save\r\n}\r\n\r\nasync function query() {\r\n    gThemeState = await storageService.loadFromStorage(KEY)\r\n    if(!gThemeState){\r\n        gThemeState = false\r\n        storageService.saveToStorage(KEY, gThemeState)\r\n    }\r\n    return gThemeState\r\n}\r\n\r\n\r\nfunction save(newThemeState) {\r\n    gThemeState = newThemeState\r\n    storageService.saveToStorage(KEY, gThemeState)\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Temperature } from \"./TemperaturePreview\";\r\nimport { updateCurrCity,updateFavoriteCitys } from \"../store/actions/cityActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { weatherService } from \"../services/weatherService\";\r\nimport { BsThreeDots,BsTrash } from \"react-icons/bs\";\r\nimport { getWeatherIcon } from \"../utils/getWeatherIcons\";\r\nimport { toast } from 'react-toastify';\r\nimport { Loader } from \"../cmps/Loader\";\r\n\r\nexport const FavoritePreview = ({city}) => {\r\n\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n    const [cityData, setCityData] = useState(null)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const modalRef = useRef()\r\n\r\n    useEffect(() => {\r\n        try {\r\n            async function fetchCurrentCityConditions() {   \r\n                const response = await weatherService.getCurrentCityConditions(city.key).then (data => data.json()).then (data => {\r\n                    return data[0]\r\n                })\r\n                if(response){\r\n                    const currData = {\r\n                        temperature:response.Temperature.Metric.Value,\r\n                        realFeelTemperature:response.RealFeelTemperature.Metric.Value,\r\n                        weatherText:response.WeatherText,\r\n                        weatherIcon:response.WeatherIcon,\r\n                        temperatureParams:[\r\n                            {\r\n                                name:'UV',\r\n                                value:response.UVIndex,\r\n                                unit: '/10'\r\n                            },\r\n                            {\r\n                                name:'Humidity',\r\n                                value: response.RelativeHumidity,\r\n                                unit: '%'\r\n                            },\r\n                            {\r\n                                name:'Wind Gust',\r\n                                value:response.WindGust.Speed.Metric.Value,\r\n                                unit: 'km/h'\r\n                            }\r\n                        ]\r\n                    } \r\n                    setCityData(currData)\r\n                }\r\n            }\r\n            fetchCurrentCityConditions();\r\n        } catch (error) {\r\n            toast.error(\"Failed getting current conditions\", { position: toast.POSITION.BOTTOM_LEFT })\r\n            console.log('ERR in getting fav city conditions', error);\r\n        }\r\n    }, [city.key])\r\n\r\n    const onUpdateCurrCity = () => {\r\n        dispatch(updateCurrCity(city))\r\n        history.push(`/${city.name}`)\r\n    }\r\n\r\n    function onRemoveLocation(e) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        dispatch(updateFavoriteCitys(city)) \r\n        setIsOpen(false)\r\n    }\r\n\r\n    function onOpenModal() {\r\n        setIsOpen(p=>!p)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isOpen){\r\n            if(modalRef&&modalRef.current){\r\n                modalRef.current.focus()\r\n            }\r\n        }\r\n    }, [isOpen])\r\n\r\n    if(!cityData)return <Loader/>\r\n    return (\r\n        <div className='weather-card-preview favorite flex column' onClick={onUpdateCurrCity}>\r\n            <div className=\"position-relative options-container\" >\r\n                <div className={`options-btn-wrapper flex place-center ${isOpen?'active':''}`} onClick={(e)=>{\r\n                        e.preventDefault()\r\n                        e.stopPropagation()\r\n                        onOpenModal()\r\n                    }} >\r\n                    <BsThreeDots/>\r\n                </div>\r\n                {isOpen&&<div \r\n                className=\"modal\" \r\n                tabIndex=\"0\" ref={modalRef} \r\n                onBlur={()=> setIsOpen(false)} \r\n                >\r\n                    <div onClick={(e)=>onRemoveLocation(e)} className=\"delete-btn flex place-center\"><div className='margin-right-5px'>Delete</div><BsTrash/></div>\r\n                </div>}\r\n            </div>\r\n            <div className='flex space-between width-full'>\r\n                <div className={`flex column favorite-location ${themeState?'dark':''}`}>\r\n                    <div className='title-txt bold-600 space-nowrap'>{city.name},</div>\r\n                    <div>{city.country}</div>\r\n                </div>\r\n                <div className=\"weather-icon-favorite\">\r\n                    <img src={getWeatherIcon(cityData.weatherIcon)} alt=\"\" srcSet=\"\" />   \r\n                    <div className={`img-shadow-favorite ${themeState?\"dark-theme\":\"light-theme\"}`}></div>\r\n                </div>\r\n            </div>\r\n            <div className='flex space-between width-full margin-t-20'>\r\n                <div className={`curr-favorite-location-params flex`}>\r\n                    {cityData.temperatureParams.map((param, idx)=>\r\n                        <div key={idx} className='flex column param-wrapper justify-center'>\r\n                            <div className='text-center fs14'>{param.name}</div>\r\n                            <div className='text-center fs11'>{param.value}{param.unit}</div>\r\n                        </div>\r\n                    )} \r\n                </div>\r\n                <div className='fs40 bold-700 favorite-temperature'><Temperature value={cityData.temperature}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { FavoritePreview } from \"./FavoritePreview\"\r\n\r\nexport const FavoriteList = ({favoriteCitys}) => {\r\n\r\n    return (\r\n       <div className=\"favorite-list inner-container \">\r\n           {favoriteCitys.map((city,idx)=>\r\n                <FavoritePreview key={idx} city={city}/>\r\n            )}\r\n       </div>\r\n    )\r\n}","import { WeatherDetails } from './pages/WeatherDetails.jsx'\r\nimport { FavoriteCitys } from './pages/FavoriteCitys.jsx'\r\n\r\n\r\nexport const routes=[\r\n\r\n  {\r\n    path: '/',\r\n    component: WeatherDetails,\r\n  },\r\n  {\r\n    path: '/favorite',\r\n    component: FavoriteCitys,\r\n  },\r\n  {\r\n    path: '/:id',\r\n    component: WeatherDetails,\r\n  }\r\n]\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FavoriteList } from \"../cmps/FavoriteList\";\r\nimport { loadFavoriteCitys } from \"../store/actions/cityActions\";\r\nimport { Loader } from \"../cmps/Loader\";\r\n\r\nexport const FavoriteCitys = () => {\r\n\r\n    const favoriteCitys = useSelector(state => state.city.favoriteCitys);    \r\n    const currCity = useSelector(state => state.city.currCity); \r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(loadFavoriteCitys())\r\n    }, [dispatch])\r\n\r\n    if(favoriteCitys.length===0&&!currCity) return <Loader/>\r\n    return (\r\n        <div className='favorite-page flex place-center column'>\r\n            <div className=\"title bold-800 title-txt margin-bottom-30px\">Favorite Locations</div>\r\n            {\r\n               favoriteCitys.length>0?\r\n               <FavoriteList favoriteCitys={favoriteCitys}/>\r\n               : \r\n               <div className=\" bold-700 title-txt\">No favorite citys</div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { themeService } from '../../services/themeService'\r\nimport { loading, doneLoading } from './systemActions';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function loadTheme() {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const themeState = await themeService.query();\r\n            dispatch({ type: 'SET_THEME', themeState })\r\n        }catch(err){\r\n            console.log('err in loading theme', err);\r\n            toast.error('Unable to load  theme background color status', { position: toast.POSITION.BOTTOM_LEFT })\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateTheme(themeState) {\r\n\r\n  return async dispatch => {\r\n      try{\r\n          await themeService.save(themeState)\r\n          dispatch({ type: 'SET_THEME', themeState})\r\n      }catch(err){\r\n          console.log('err in updating theme', err); \r\n          toast.error('Unable to update theme background color', { position: toast.POSITION.BOTTOM_LEFT })\r\n      }\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadTheme, updateTheme } from \"../../store/actions/themeActions\";\r\n\r\nexport function ThemeToggleBtn() {\r\n\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(loadTheme())\r\n    }, [dispatch])\r\n\r\n  \r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"toggle\">\r\n\r\n                <input \r\n                className=\"toggle-input\" \r\n                type=\"checkbox\" \r\n                checked={themeState}\r\n                onChange={()=>{\r\n                    dispatch(updateTheme(!themeState))\r\n                }}\r\n                />\r\n\r\n                <div className='toggle-bg'></div>\r\n                <div className=\"toggle-switch \">\r\n                    {themeState?\r\n                        <img className='dark' src=\"https://img.icons8.com/office/25/000000/moon.png\" alt=''/>\r\n                        :\r\n                        <img className='light' src=\"https://img.icons8.com/emoji/35/000000/sun-behind-small-cloud.png\" alt=''/>\r\n                    }\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from \"react\";\r\nimport { NavLink,useLocation } from 'react-router-dom';\r\nimport { ThemeToggleBtn } from \"./buttons/ThemeToggleBtn\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const currCity = useSelector(state => state.city.currCity); //key\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    const [offset, setOffset] = useState(0);\r\n    const location = useLocation();\r\n\r\n    const getWidth = () => window.innerWidth \r\n    || document.documentElement.clientWidth \r\n    || document.body.clientWidth;\r\n\r\n    function useCurrentWidth() {\r\n        // save current window width in the state object\r\n        let [width, setWidth] = useState(getWidth());\r\n\r\n        // in this case useEffect will execute only once because\r\n        // it does not have any dependencies.\r\n        useEffect(() => {\r\n          const resizeListener = () => {\r\n            // change width from the state object\r\n            setWidth(getWidth())\r\n          };\r\n          // set resize listener\r\n          window.addEventListener('resize', resizeListener);\r\n\r\n          // clean up function\r\n          return () => {\r\n            // remove resize listener\r\n            window.removeEventListener('resize', resizeListener);\r\n          }\r\n        }, [])\r\n\r\n        return width;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      window.onscroll = () => {\r\n        setOffset(window.pageYOffset)\r\n      }\r\n    }, []);\r\n  \r\n\r\n    return (\r\n        <div className={`navbar ${offset>0?'scroll':''}`}>\r\n            <div className='inner-navbar-container flex space-between'>\r\n                <NavLink className='logo-wrapper flex place-center' to={`/${currCity.name}`}>\r\n                    <span> Weather app </span>\r\n                </NavLink>\r\n\r\n                {useCurrentWidth()>599&&<div className={`flex place-center`}>\r\n                    <NavLink className={`navlink-btn margin-right-7px ${themeState?'dark':''} ${location.pathname === '/'?'active':''}`} to={`/${currCity.name}`}>\r\n                        home\r\n                        <span></span><span></span><span></span><span></span>\r\n                    </NavLink>\r\n                    <NavLink className={`navlink-btn margin-right-7px ${themeState?'dark':''} ${location.pathname === '/favorite'?'active':''}`} to=\"/favorite\">\r\n                        favorite\r\n                        <span></span><span></span><span></span><span></span>\r\n                    </NavLink>\r\n                    <ThemeToggleBtn/>\r\n                </div>}\r\n                {useCurrentWidth()<600&&<ThemeToggleBtn/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink,useLocation } from 'react-router-dom';\r\nimport { VscHome, VscHeart } from \"react-icons/vsc\";\r\n\r\nexport const MobileNavbar = () => {\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className={`mobile-navbar ${themeState?'dark-theme':''}`}>\r\n            <div className='flex space-around place-center inner-navbar-container'>\r\n                <NavLink className={`navlink-btn flex place-center ${location.pathname === '/'?'active':''}`} to=\"/\">\r\n                    <VscHome/>\r\n                </NavLink>\r\n                <NavLink className={`navlink-btn flex place-center ${location.pathname === '/favorite'?'active':''}`} to=\"/favorite\">\r\n                    <VscHeart/>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { Navbar } from './cmps/Navbar'\nimport { MobileNavbar } from './cmps/MobileNavbar'\nimport { loadTheme } from \"./store/actions/themeActions\";\n\nexport function App() {\n\n  const themeState = useSelector(state => state.theme.themeState);  \n  const dispatch = useDispatch()\n  const location = useLocation();\n\n  useEffect(() => {\n      dispatch(loadTheme())\n  }, [dispatch])\n\n  return (\n    <div className={`App ${themeState?location.pathname === '/favorite'?'dark-desktop-favorite-page-view':'dark':location.pathname === '/favorite'?'light-desktop-favorite-page-view':'light'}`}>\n      <Navbar/>\n      <Switch>\n        { routes.map(route => <Route key={ route.path } exact component={ route.component } path={ route.path } />) }\n      </Switch>\n      <MobileNavbar/>\n      <ToastContainer />\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx'\nimport './assets/styles/global.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}