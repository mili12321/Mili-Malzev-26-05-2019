{"version":3,"sources":["store/reducers/systemReducer.js","store/reducers/cityReducer.js","store/reducers/themeReducer.js","store/reducers/temperatureScaleReducer.js","store/reducers/index.js","store/store.js","services/storageService.js","services/cityService.js","store/actions/cityActions.js","store/actions/systemActions.js","services/weatherService.js","cmps/buttons/HeartBtnIcon.jsx","cmps/Search.jsx","cmps/TemperaturePreview.jsx","utils/getWeatherIcons.js","cmps/weather-details-cmps/WeatherCardPreview.jsx","cmps/buttons/FavoriteBtn.jsx","utils/getCurrentDate.js","cmps/weather-details-cmps/ForecastPreview.jsx","cmps/weather-details-cmps/ForecastList.jsx","store/actions/temperatureScaleActions.js","cmps/buttons/TemperatureConversionBtn.jsx","cmps/CircularProgressBar.jsx","utils/formatAMPM.js","cmps/Loader.jsx","pages/WeatherDetails.jsx","services/themeService.js","cmps/FavoritePreview.jsx","cmps/FavoriteList.jsx","routes.js","pages/FavoriteCitys.jsx","store/actions/themeActions.js","cmps/buttons/ThemeToggleBtn.jsx","cmps/Navbar.jsx","cmps/MobileNavbar.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","isLoading","favoriteCitys","currCity","themeState","temperatureScale","rootReducer","combineReducers","system","state","action","type","city","citys","theme","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","gCitys","storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","KEY","cityService","query","getById","cityId","find","_city","_id","Promise","resolve","save","filter","toast","success","name","position","POSITION","BOTTOM_LEFT","newCity","_makeid","_add","a","length","text","possible","i","charAt","Math","floor","random","loadFavoriteCitys","dispatch","console","log","error","updateFavoriteCitys","updateCurrCity","err","API_KEY","weatherService","getAutoComplete","fetch","getCurrentCityConditions","getForecastFromCity","getCurrLocation","getHourlyFrecast","cityKey","status","res","HeartBtnIcon","isActive","size","className","Search","useSelector","useState","citysData","setCitysData","useDispatch","history","useHistory","inputRef","useRef","ev","target","value","then","data","json","autoCompleteData","getCurrentStyle","Key","onToggleLocation","e","cityData","LocalizedName","country","Country","preventDefault","stopPropagation","onGetCityDetails","push","useEffect","ref","onChange","placeholder","map","idx","CityDataPreview","setisActive","isIncludsCity","onClick","current","Temperature","celsius","currentTextSize","round","getWeatherIcon","weatherIcon","getParamImg","paramName","includes","WeatherCardPreview","currentCityData","weatherText","temperature","realFeelTemperature","getWeatherIconSize","src","alt","srcSet","FavoriteBtn","HeartButtonText","getForecastDate","day","d","Date","date","getDate","monthName","getMonth","getForecastDayNameShort","getDay","ForecastPreview","dailyForecast","Day","Icon","ShortPhrase","Maximum","Value","Minimum","AirAndPollen","WindGust","Speed","RealFeelTemperature","TotalLiquid","ForecastList","dailyForecastsData","updateTemperatureScale","TemperatureConversionBtn","checked","CircularProgressBar","param","getParamValue","txt","unit","formatAMPM","hours","getHours","minutes","getMinutes","ampm","Loader","gThemeState","WeatherDetails","setCurrentCityData","setDailyForecastsData","hourlyForecastData","setHourlyForecatsData","location","useLocation","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","fetchCurrentLocation","response","parseInt","getLocation","pathname","defaultCity","WeatherText","WeatherIcon","Metric","temperatureParams","UVIndex","UVIndexText","RelativeHumidity","PrecipitationSummary","Precipitation","Unit","fetchCurrentCityConditions","DailyForecasts","fetchDailyForecast","fetchHourlyForecast","Location","months","monthIndex","dayName","formatDate","TemperatureParam","TemperatureParamDesktop","HourlyForecast","hourDate","DateTime","IconPhrase","FavoritePreview","setCityData","isOpen","setIsOpen","modalRef","currData","focus","p","tabIndex","onBlur","onRemoveLocation","FavoriteList","routes","path","component","themeService","newThemeState","loadTheme","ThemeToggleBtn","updateTheme","Navbar","offset","setOffset","getWidth","innerWidth","document","documentElement","clientWidth","body","width","setWidth","resizeListener","addEventListener","removeEventListener","onscroll","pageYOffset","to","MobileNavbar","App","route","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03eb48ee.chunk.js","sourcesContent":["const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    favoriteCitys: [],\r\n    currCity:null\r\n    // currCity:{\r\n    //     _id:'2154402',\r\n    //     name:'Tel Aviv',\r\n    //     country:'Israel',\r\n    //     key:2154402\r\n    // }\r\n}\r\n\r\nexport function cityReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_FAVORITE_CITYS':\r\n            return {\r\n                ...state,\r\n                favoriteCitys: action.citys\r\n            }\r\n        case 'SET_CURRENT_CITY':\r\n            return {\r\n                ...state,\r\n                currCity: action.city\r\n            } \r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    themeState: false\r\n}\r\n\r\nexport function themeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_THEME':\r\n            return {\r\n                ...state,\r\n                themeState: action.themeState\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    temperatureScale: 'celsius'\r\n}\r\n\r\nexport function temperatureScaleReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_SCALE':\r\n            return {\r\n                ...state,\r\n                temperatureScale: action.temperatureScale\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport {systemReducer} from './systemReducer';\r\nimport { cityReducer } from './cityReducer';\r\nimport { themeReducer } from './themeReducer';\r\nimport { temperatureScaleReducer } from './temperatureScaleReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  system: systemReducer,\r\n  city: cityReducer,\r\n  theme: themeReducer,\r\n  temperatureScale: temperatureScaleReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { storageService } from \"./storageService\"\r\nimport { toast } from 'react-toastify';\r\n\r\nconst KEY = 'CITYS';\r\nlet gCitys;\r\n\r\nexport const cityService = {\r\n    query,\r\n    getById,\r\n    save\r\n}\r\n\r\n\r\nasync function query() {\r\n    gCitys = await storageService.loadFromStorage(KEY)\r\n    if(!gCitys){\r\n        gCitys = []\r\n        storageService.saveToStorage(KEY, gCitys)\r\n    }\r\n    return gCitys\r\n}\r\n\r\n\r\nfunction getById(cityId) {\r\n    if(gCitys){\r\n        const city = gCitys.find(_city => _city._id === cityId)\r\n        return Promise.resolve(city)\r\n    }\r\n}\r\n\r\n\r\nfunction save(city) {\r\n    const isIncludsCity = gCitys.filter(_city=>_city.key===city.key)[0]\r\n    if(isIncludsCity){\r\n        //remove\r\n        _remove(city.key)\r\n        toast.success(`${city.name} deleted from favorite list`, { position: toast.POSITION.BOTTOM_LEFT })\r\n    }else{\r\n        //add\r\n        _add(city)\r\n        toast.success(`${city.name} added to favorite list`, { position: toast.POSITION.BOTTOM_LEFT })\r\n    }\r\n    storageService.saveToStorage(KEY, gCitys)\r\n    return gCitys\r\n}\r\n\r\n\r\nfunction _add(city) {\r\n    const newCity = {\r\n        _id:_makeid(),\r\n        ...city\r\n    }\r\n    gCitys = [newCity, ...gCitys]\r\n}\r\n\r\nfunction _remove(key) {\r\n    gCitys = gCitys.filter(_city=>\r\n        _city.key !== key\r\n    )\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { cityService } from '../../services/cityService'\r\nimport { loading, doneLoading } from './systemActions';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function loadFavoriteCitys() {\r\n  \r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const citys = await cityService.query();\r\n            dispatch({ type: 'SET_FAVORITE_CITYS', citys })\r\n        }catch(err){\r\n            console.log('err in loading citys', err);\r\n            toast.error('Unable to loade citys', { position: toast.POSITION.BOTTOM_LEFT })\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateFavoriteCitys(city) {\r\n  return async dispatch => {\r\n      try{\r\n        const citys = await cityService.save(city)\r\n        dispatch({ type: 'SET_FAVORITE_CITYS', citys})\r\n      }catch(err){\r\n        toast.error('Unable to update fav citys', { position: toast.POSITION.BOTTOM_LEFT })\r\n        console.log('err in updating citys', err); \r\n      }\r\n  }\r\n}\r\n\r\n\r\nexport function updateCurrCity(city) {//with geolocatin \r\n\r\n  return async dispatch => {\r\n      try{\r\n          dispatch({ type: 'SET_CURRENT_CITY', city})\r\n      }catch(err){\r\n          console.log('err in updating city', err); \r\n          toast.error('Unable to update city', { position: toast.POSITION.BOTTOM_LEFT })\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","const API_KEY = 'HyKjAAG0MAW01oMa21ivIlVReQp6o7Nd'\r\n\r\nexport const weatherService = {\r\n    getAutoComplete,\r\n    getCurrentCityConditions,\r\n    getForecastFromCity,\r\n    getCurrLocation,\r\n    getHourlyFrecast\r\n}\r\n\r\nasync function getCurrLocation(status) {\r\n    const res =  fetch(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${status}`\r\n    )\r\n    return res\r\n}\r\n\r\nfunction getHourlyFrecast(cityKey) {\r\n    const res =  fetch(\r\n        `https://dataservice.accuweather.com/forecasts/v1/hourly/12hour/${cityKey}?apikey=${API_KEY}&details=true&metric=true`\r\n    )\r\n    return res\r\n}\r\n\r\nasync function getForecastFromCity(cityKey) {\r\n   const res = fetch(\r\n        `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${API_KEY}&details=true&metric=true`\r\n    )\r\n    return res\r\n}\r\n\r\nasync function getCurrentCityConditions(cityKey) {\r\n    const res = fetch(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${API_KEY}&details=true`\r\n    )\r\n    return res\r\n}\r\n\r\nfunction getAutoComplete(query) {\r\n    const res = fetch(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\n    )\r\n    return res\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const HeartBtnIcon = ({isActive,size}) => {\r\n\r\n    return (\r\n        <div \r\n        className={`heart ${isActive?'active':''}`}\r\n        >\r\n            <div className={`heart-flip ${size?size:''}`}></div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState,useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadFavoriteCitys,updateFavoriteCitys,updateCurrCity} from \"../store/actions/cityActions\";\r\nimport { weatherService } from \"../services/weatherService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HeartBtnIcon } from \"./buttons/HeartBtnIcon\";\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function Search() {\r\n\r\n    const favoriteCitys = useSelector(state => state.city.favoriteCitys);    \r\n    const themeState = useSelector(state => state.theme.themeState); \r\n \r\n    const [citysData, setCitysData] = useState([]);\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const inputRef = useRef()\r\n \r\n    \r\n    async function getAutoComplete(ev) {\r\n        if( ev.target.value.length===0 ){\r\n            setCitysData([]);\r\n        }\r\n        if(ev.target.value.length>2){\r\n            try {\r\n                const autoCompleteData = await weatherService.getAutoComplete(ev.target.value)\r\n                    .then (data => data.json())\r\n                    .then (data => {\r\n                        return data\r\n                    })\r\n                setCitysData(autoCompleteData)\r\n            } catch (error) {\r\n                setCitysData([]);\r\n                toast.error(\"Failed auto complete\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in get citys from AutoComplete', error);\r\n            }\r\n        }\r\n    }\r\n  \r\n\r\n    useEffect(() => {\r\n        dispatch(loadFavoriteCitys())\r\n    }, [dispatch])    \r\n    \r\n\r\n    function getCurrentStyle(Key) {\r\n        if(favoriteCitys&&favoriteCitys.length>0){\r\n            const isIncludsCity = favoriteCitys.filter(city=>city.key===Key)[0]\r\n            if(isIncludsCity){\r\n                return 'includes'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onToggleLocation(e,cityData) {\r\n        const data = {\r\n            name:cityData.LocalizedName,\r\n            country:cityData.Country.LocalizedName,\r\n            key:cityData.Key\r\n        }\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        dispatch(updateFavoriteCitys(data)) \r\n    }    \r\n    \r\n    function onGetCityDetails(cityData) {\r\n        const data = {\r\n            name:cityData.LocalizedName,\r\n            country:cityData.Country.LocalizedName,\r\n            key:cityData.Key\r\n        }\r\n\r\n        dispatch(updateCurrCity(data)) \r\n        history.push(`/${data.name}`)\r\n    }\r\n\r\n    return (\r\n        <div className='search flex column justify-center'>\r\n            <div className=\"search-title\">Search for city</div>\r\n            <input \r\n            className={`search-input ${themeState?'dark':''}`}\r\n            type=\"search\"  \r\n            ref={inputRef}\r\n            onChange={getAutoComplete}\r\n            placeholder='Enter at least 2 letters to start..'\r\n            />\r\n            {citysData.length>0&&\r\n                <div className={`city-list ${citysData.length>0?'full':''}`}>\r\n                   <div className=\"city-list-scroll-wrapper\">\r\n                   {\r\n                        citysData.map((cityData,idx)=>\r\n                            <CityDataPreview\r\n                            key={idx} \r\n                            cityData={cityData}\r\n                            getCurrentStyle={getCurrentStyle}\r\n                            onGetCityDetails={onGetCityDetails}\r\n                            onToggleLocation={onToggleLocation}\r\n                            favoriteCitys={favoriteCitys}\r\n                            setCitysData={setCitysData}\r\n                            inputRef={inputRef}\r\n                            />\r\n                        )\r\n                    }\r\n                   </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction CityDataPreview({favoriteCitys,cityData,getCurrentStyle,onGetCityDetails,onToggleLocation,setCitysData,inputRef}) {\r\n\r\n    const [isActive, setisActive] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const isIncludsCity = favoriteCitys.filter(_city=>_city.key===cityData.Key)[0]\r\n       if(isIncludsCity){\r\n        setisActive(true)\r\n       }else{\r\n        setisActive(false)\r\n       }\r\n    }, [cityData,favoriteCitys])\r\n\r\n    function onSetCitysData() {\r\n        onGetCityDetails(cityData)\r\n        setCitysData([])\r\n        if(inputRef&&inputRef.current){\r\n            inputRef.current.value=''\r\n        }\r\n    }\r\n\r\n    return ( \r\n    <div className={`city-data-preview flex  place-center ${getCurrentStyle(cityData.Key)}`} onClick={onSetCitysData}>\r\n       <div className='flex search-name-result'>\r\n            <div className='margin-right-5px'>{cityData.LocalizedName}, </div>\r\n            <div className='country'>{cityData.Country.LocalizedName}</div>\r\n       </div>\r\n        <div onClick={(e)=>{onToggleLocation(e,cityData)}}>\r\n            <HeartBtnIcon isActive={isActive} size={'small'}/>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const Temperature = ({value,currentTextSize}) => {\r\n\r\n    const temperatureScale = useSelector(state => state.temperatureScale.temperatureScale);  \r\n\r\n    function convertToF(celsius) {\r\n        let fahrenheit = (celsius * 9/5) + 32;\r\n        return fahrenheit\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            <span className='temperature-value'>\r\n                { temperatureScale==='celsius'&& Math.round(value) }\r\n                { temperatureScale==='fahrenheit'&& Math.round(convertToF(value)) }\r\n            </span> \r\n            <span className='temperature-unit'>\r\n                { temperatureScale==='celsius'&& <>&#176;</> }\r\n                { temperatureScale==='fahrenheit'&& <span className={`${currentTextSize?'':'fs-for-temp-scale'}`}>&#8457;</span> }\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n","import {RiWindyLine} from 'react-icons/ri'\r\nimport {WiHumidity} from 'react-icons/wi'\r\nimport {BiSun} from 'react-icons/bi'\r\nimport {GiDroplets} from 'react-icons/gi'\r\n\r\nexport function getWeatherIcon(weatherIcon){\r\n    switch (weatherIcon) {\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199308/OIH57D1.eps_crop__1_-removebg-preview_g3qwv5.png\";  \r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n        case 19:\r\n        case 20:\r\n        case 38:\r\n        case 43:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199333/OIH57D1.eps_crop__2_-removebg-preview_oclptj.png\";  \r\n        case 11:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199333/OIH57D1.eps_crop__2_-removebg-preview_oclptj.png\"; \r\n        case 12:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199371/OIH57D1.eps_crop__4_-removebg-preview_gnl9n6.png\"; \r\n        case 13:\r\n        case 14:\r\n        case 39:\r\n        case 40:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199391/OIH57D1.eps_crop__3_-removebg-preview_eicsqk.png\";  \r\n        case 15:\r\n        case 16:\r\n        case 17:\r\n        case 41:\r\n        case 42:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622039606/OIH57D1.eps_crop-removebg-preview_dx3n3o.png\"; \r\n        case 18:\r\n        case 25:\r\n        case 26:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199420/OIH57D1.eps_crop__5_-removebg-preview_nazxov.png\"; \r\n        case 22:\r\n        case 29:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199442/OIH57D1.eps_crop__7_-removebg-preview_ow6llf.png\"; \r\n        case 23:\r\n        case 44:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199464/OIH57D1.eps_crop__6_-removebg-preview_meirie.png\"; \r\n        case 24:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199478/OIH57D1.eps_crop__13_-removebg-preview_ilfsnl.png\";  \r\n        case 30:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199496/OIH57D1.eps_crop__12_-removebg-preview_tiqmlu.png\"; \r\n        case 31:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199496/OIH57D1.eps_crop__12_-removebg-preview_tiqmlu.png\";\r\n        case 32:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199523/OIH57D1.eps_crop__15_-removebg-preview_lw0ij6.png\"; \r\n            // return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199544/OIH57D1.eps_crop__14_-removebg-preview_wkh9ec.png\";   \r\n        case 33:\r\n        case 34:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199561/OIH57D1.eps_crop__11_-removebg-preview_ywo1lm.png\"  \r\n        case 35:\r\n        case 36:\r\n        case 37:\r\n            return \"https://res.cloudinary.com/dzvebcsrp/image/upload/v1622199575/OIH57D1.eps_crop__9_-removebg-preview_beblpw.png\";\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport function getParamImg(paramName) {\r\n    switch (true) {\r\n        case paramName.includes('UV'):\r\n            return <BiSun/>\r\n        case paramName.includes('Humidity'):\r\n           return <WiHumidity/>       \r\n        case paramName.includes('Wind'):\r\n           return <RiWindyLine/>\r\n        case paramName.includes('Precipitation'):\r\n        case paramName.includes('Liquid'):\r\n           return <GiDroplets/>\r\n        default:\r\n            break;\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Temperature } from \"../TemperaturePreview\";\r\nimport { getWeatherIcon } from \"../../utils/getWeatherIcons\";\r\n\r\nexport const WeatherCardPreview = ({currentCityData}) => {\r\n    \r\n    const {weatherIcon,weatherText,temperature,realFeelTemperature} = currentCityData\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n\r\n    function getWeatherIconSize() {\r\n       switch (weatherIcon) {\r\n           case 33:\r\n           case 34:\r\n           case 35:\r\n           case 36:\r\n           case 37:\r\n               return 'smaller'\r\n           default:\r\n               return ''\r\n       }\r\n    }\r\n\r\n    return (\r\n       <div className='weather-card-preview flex'>\r\n           <div className=\"weather-text bold-600 title-txt\">{weatherText}</div>\r\n           <div className=\"temperature-wrapper flex\">\r\n               <div className=\"current-temperature\">\r\n                    <Temperature value={temperature}/>\r\n               </div>\r\n               <div className=\"real-feel-temperature under-title-small-txt bold-600 \">\r\n                    <span>Feels like </span>\r\n                    <span className='real-feel-value'>\r\n                        <Temperature value={realFeelTemperature} currentTextSize={true}/>\r\n                    </span>\r\n               </div>\r\n           </div>\r\n           <div className={`weather-icon ${getWeatherIconSize()}`}>\r\n               <img src={getWeatherIcon(weatherIcon)} alt=\"\" srcSet=\"\" />   \r\n               <div className={`img-shadow ${themeState?\"dark-theme\":\"light-theme\"}`}></div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect,useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateFavoriteCitys } from \"../../store/actions/cityActions\";\r\nimport { HeartBtnIcon } from \"./HeartBtnIcon\";\r\nexport const FavoriteBtn = ({currCity}) => {\r\n\r\n    const favoriteCitys = useSelector(state => state.city.favoriteCitys);    \r\n    const [isActive, setisActive] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const isIncludsCity = favoriteCitys.filter(_city=>_city.key===currCity.key)[0]\r\n       if(isIncludsCity){\r\n        setisActive(true)\r\n       }else{\r\n        setisActive(false)\r\n       }\r\n    }, [currCity,favoriteCitys])\r\n\r\n    function onUpdateFavoriteList() {\r\n         //favoriteCitys updated and updates the isActive value\r\n        dispatch(updateFavoriteCitys(currCity)) \r\n    }\r\n\r\n    return (\r\n        <div \r\n        className='favorite-btn'\r\n        onClick={onUpdateFavoriteList}\r\n        >\r\n            <div className=\"desktop-view-btn\">\r\n                <HeartButtonText isActive={isActive}/>\r\n            </div>\r\n            <div className='mobile-view-btn'>\r\n                <HeartBtnIcon isActive={isActive}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HeartButtonText = ({isActive}) => {\r\n\r\n    return (\r\n        <div \r\n        className={`heart-button ${isActive?'active':''}`}\r\n        >\r\n            <div className=\"heart-flip\"></div>\r\n            <span>{isActive?'Added to':'Add to'} favorite</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","export function getForecastDayName(day){\r\n    const d = new Date(day)\r\n    const days = [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday'\r\n    ]\r\n\r\n    const dayName = days[d.getDay()] \r\n    return dayName\r\n}\r\nexport function getForecastDate(day){\r\n    const d = new Date(day)\r\n    const date = d.getDate()\r\n    const months = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ]\r\n    \r\n    const monthIndex = d.getMonth()\r\n    const monthName = months[monthIndex]\r\n    const formatted = `${date} ${monthName}`\r\n    return formatted\r\n}\r\nexport function getForecastDayNameShort(day){\r\n    const d = new Date(day)\r\n    const days = [\r\n        'S',\r\n        'M',\r\n        'T',\r\n        'W',\r\n        'T',\r\n        'F',\r\n        'S'\r\n    ]\r\n\r\n    const dayName = days[d.getDay()] \r\n    return dayName\r\n}\r\nexport function getCurrentDate(){\r\n\r\n    const d = new Date()\r\n    formatDate(d)\r\n}\r\n\r\nfunction formatDate(d) {\r\n    const date = d.getDate()\r\n    const months = [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ]\r\n    \r\n    const monthIndex = d.getMonth()\r\n    const monthName = months[monthIndex]\r\n\r\n    const days = [\r\n        'Sun',\r\n        'Mon',\r\n        'Tue',\r\n        'Wed',\r\n        'Thu',\r\n        'Fri',\r\n        'Sat'\r\n    ]\r\n\r\n    const dayName = days[d.getDay()] \r\n    const formatted = `${dayName}, ${date} ${monthName}`\r\n    return formatted\r\n}","import React from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { Temperature } from \"../TemperaturePreview\";\r\nimport {getForecastDayName, getForecastDate, getForecastDayNameShort} from \"../../utils/getCurrentDate\";\r\nimport { getWeatherIcon,getParamImg } from \"../../utils/getWeatherIcons\";\r\nimport {FaTemperatureHigh } from \"react-icons/fa\";\r\n\r\nexport const ForecastPreview = ({dailyForecast}) => {\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n\r\n    return (\r\n        <div className={`card-type-2 ${themeState?'':'light-theme'} day-forecast-preview`} >\r\n\r\n            <div className='desktop'>\r\n                <div className='flex column place-center'>\r\n                    <div className='flex column place-center'>\r\n                        <div className={`flex column place-center ${themeState?'lightClr':''}`}>\r\n                            <div className='title-txt'>\r\n                                {getForecastDayName(dailyForecast.Date)}\r\n                            </div>\r\n                            <div className='fs11'>\r\n                                {getForecastDate(dailyForecast.Date)}\r\n                            </div>\r\n                        </div>\r\n                        <div className='day-icon'>\r\n                            <img src={getWeatherIcon(dailyForecast.Day.Icon)} alt=\"\" srcSet=\"\" />   \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div  \r\n                className={`weather-text title-txt text-center ${themeState?'lightClr':''}`} >\r\n                    {dailyForecast.Day.ShortPhrase}\r\n                </div>\r\n                <div className=\"flex width-full space-evenly\">\r\n                    <div className='day-temperature max bold-700 fs30'>\r\n                        <Temperature currentTextSize={true} value={dailyForecast.Temperature.Maximum.Value}/>\r\n                    </div>\r\n                    <div className='day-temperature min bold-700 fs30'>\r\n                        <Temperature currentTextSize={true} value={dailyForecast.Temperature.Minimum.Value}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"temperature-params forecast\">\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\">{ getParamImg('UV')}</span>\r\n                            <span>UV:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}>{dailyForecast.AirAndPollen[5].Value}/10</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\">{ getParamImg('Wind')}</span>\r\n                            <span>Wind:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}>{dailyForecast.Day.WindGust.Speed.Value} km/h</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\"><FaTemperatureHigh/></span><span>Real Feel:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}> \r\n                            <Temperature currentTextSize={true} value={dailyForecast.RealFeelTemperature.Maximum.Value}/>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <span className='clr6 margin-right-5px'>\r\n                            <span className=\"margin-right-5px\">{ getParamImg('Liquid')}</span>\r\n                            <span>Total Liquid:</span>\r\n                        </span>\r\n                        <span className={`${themeState?'clr4':'clr6'} `}>{dailyForecast.Day.TotalLiquid.Value} mm</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='mobile flex column place-center justify-center'>\r\n                <div className='day-letter'>{getForecastDayNameShort(dailyForecast.Date)}</div>\r\n                <div className='day-icon'>\r\n                    <img src={getWeatherIcon(dailyForecast.Day.Icon)} alt=\"\" srcSet=\"\" />   \r\n                </div>\r\n                <div className='day-temperature bold-700'>\r\n                    <Temperature value={dailyForecast.Temperature.Maximum.Value} currentTextSize={true}/>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { ForecastPreview } from \"./ForecastPreview\";\r\n\r\nexport const ForecastList = ({dailyForecastsData}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"bold-700 title-txt\">Next 5 Days</div>\r\n            <div className='daily-forecasts'>\r\n                {\r\n                    dailyForecastsData.map( (dailyForecast,idx)=> \r\n                        <ForecastPreview key={idx} day={'M'} dailyForecast={dailyForecast}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { toast } from 'react-toastify';\r\n\r\nexport function updateTemperatureScale(temperatureScale) {\r\n  return async dispatch => {\r\n      try{\r\n          dispatch({ type: 'SET_SCALE', temperatureScale})\r\n      }catch(err){\r\n          console.log('err in updating temperature scale', err); \r\n          toast.error('Unable to update temperature scale', { position: toast.POSITION.BOTTOM_LEFT })\r\n      }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateTemperatureScale } from \"../../store/actions/temperatureScaleActions\";\r\n\r\nexport function TemperatureConversionBtn() {\r\n\r\n    const temperatureScale = useSelector(state => state.temperatureScale.temperatureScale);  \r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    const dispatch = useDispatch()\r\n\r\n    function onUpdateTemperatureScale() {\r\n        if(temperatureScale==='celsius'){\r\n            dispatch(updateTemperatureScale('fahrenheit'))\r\n        }else{\r\n            dispatch(updateTemperatureScale('celsius'))\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"conversion-btn-wrapper width-full flex\">\r\n            <input \r\n            type=\"checkbox\" \r\n            className={`temperature-conversion-btn ${themeState?'dark':''}`}\r\n            onChange={onUpdateTemperatureScale}\r\n            checked={temperatureScale!=='celsius'?true:false}\r\n            >   \r\n            </input>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getParamImg } from \"../utils/getWeatherIcons\";\r\n\r\nexport function CircularProgressBar({param}) {\r\n\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n\r\n    function getParamValue() {\r\n        switch (true) {\r\n            case param.name.includes('UV'):\r\n                return  param.value*10\r\n            case param.name.includes('Humidity'):\r\n               return param.value       \r\n            case param.name.includes('Wind'):\r\n                return param.value       \r\n            case param.name.includes('Precipitation'):\r\n                return param.value       \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"param-progress-bar width-fit flex column place-center\">\r\n            <div className=\"title-text flex\"><div className='margin-right-7px'>{param.name}</div><div className=\"fs18\">{getParamImg(param.name)}</div></div>\r\n            <div className={`progress-circle ${getParamValue()>50?'over50':''}  p${getParamValue()} ${themeState?'dark':''}`}>\r\n                <div className={`flex ${param.txt?'column':''}`}>\r\n                    <span>{param.value}{param.unit}</span>\r\n                </div>\r\n                <div className=\"left-half-clipper\">\r\n                   <div className=\"first50-bar\"></div>\r\n                   <div className=\"value-bar\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export function formatAMPM(val) {\r\n    var date = new Date(val)\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    var strTime = hours + ':' + minutes + ' ' + ampm;\r\n    return strTime;\r\n}","import React from \"react\";\r\n\r\nexport function Loader() {\r\n    return(\r\n        <div className=\"loading-wrapper\">\r\n            <div className=\"loading-text\">LOADING</div>\r\n            <div className=\"loading-content\"></div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { updateCurrCity } from \"../store/actions/cityActions\";\r\nimport { Search } from \"../cmps/Search\";\r\nimport { WeatherCardPreview } from \"../cmps/weather-details-cmps/WeatherCardPreview\";\r\nimport { FavoriteBtn } from \"../cmps/buttons/FavoriteBtn\";\r\nimport { ForecastList } from \"../cmps/weather-details-cmps/ForecastList\";\r\nimport { weatherService } from \"../services/weatherService\";\r\nimport { getCurrentDate } from '../utils/getCurrentDate'\r\nimport { getParamImg,getWeatherIcon } from \"../utils/getWeatherIcons\";\r\nimport { TemperatureConversionBtn } from \"../cmps/buttons/TemperatureConversionBtn\";\r\nimport { Temperature } from \"../cmps/TemperaturePreview\";\r\nimport { CircularProgressBar } from \"../cmps/CircularProgressBar\";\r\nimport { formatAMPM } from \"../utils/formatAMPM\"\r\nimport { toast } from 'react-toastify';\r\nimport { Loader } from \"../cmps/Loader\";\r\n\r\nexport const WeatherDetails = () => {\r\n \r\n    const currCity = useSelector(state => state.city.currCity);\r\n\r\n    const [currentCityData, setCurrentCityData] = useState(null)\r\n    const [dailyForecastsData, setDailyForecastsData] = useState([])\r\n    const [hourlyForecastData, setHourlyForecatsData] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const location = useLocation();\r\n\r\n\r\n    useEffect(() => {\r\n        if(!currCity){\r\n            function success(position) {\r\n                const latitude  = position.coords.latitude;\r\n                const longitude = position.coords.longitude;\r\n                getLocation(`${latitude},${longitude}`)\r\n            }\r\n          \r\n            function error() {\r\n                toast.error('Unable to retrieve your location', { position: toast.POSITION.BOTTOM_LEFT })\r\n                if(location.pathname === '/'&&currCity){\r\n                    const defaultCity = {\r\n                            _id:'2154402',\r\n                            name:'Tel Aviv',\r\n                            country:'Israel',\r\n                            key:2154402\r\n                        }\r\n                    dispatch(updateCurrCity(defaultCity))\r\n                    history.push(`/${defaultCity.name}`)\r\n                }\r\n            }\r\n          \r\n            if(!navigator.geolocation) {\r\n              toast.error('Geolocation is not supported by your browser', { position: toast.POSITION.BOTTOM_LEFT })\r\n            } else {\r\n              navigator.geolocation.getCurrentPosition(success, error);\r\n            }\r\n          \r\n        }\r\n        function getLocation(status) {\r\n            async function fetchCurrentLocation() {\r\n                const response = await weatherService.getCurrLocation(status).then(data => data.json()).then(data => {\r\n                    return data\r\n                })    \r\n                const city  =  {\r\n                    _id: `${response.Key}`,\r\n                    name:response.LocalizedName,\r\n                    key:parseInt(response.Key),\r\n                    country:response.Country.LocalizedName\r\n                }\r\n                dispatch(updateCurrCity(city))\r\n                history.push(`/${city.name}`)      \r\n            }\r\n            fetchCurrentLocation()\r\n        }\r\n    }, [currCity,history,location.pathname,dispatch])\r\n\r\n\r\n    useEffect(() => {\r\n        if(currCity){\r\n            try {\r\n                async function fetchCurrentCityConditions() {    \r\n                    const response = await weatherService.getCurrentCityConditions(currCity.key).then (data => data.json()).then (data => {\r\n                        return data[0]\r\n                    })  \r\n                    let cityData\r\n                    if(response){\r\n                        cityData = {\r\n                            weatherText:response.WeatherText,\r\n                            weatherIcon:response.WeatherIcon,\r\n                            temperature:response.Temperature.Metric.Value,\r\n                            realFeelTemperature:response.RealFeelTemperature.Metric.Value,\r\n                            temperatureParams:[\r\n                                {\r\n                                    name:'UV Index',\r\n                                    value:response.UVIndex,\r\n                                    unit: '/10',\r\n                                    txt:response.UVIndexText\r\n                                },\r\n                                {\r\n                                    name:'Humidity',\r\n                                    value: response.RelativeHumidity,\r\n                                    unit: '%'\r\n                                },\r\n                                {\r\n                                    name:'Wind Gust',\r\n                                    value:response.WindGust.Speed.Metric.Value,\r\n                                    unit: 'km/h'\r\n                                },\r\n                                {\r\n                                    name:'Precipitation',\r\n                                    value:response.PrecipitationSummary.Precipitation.Metric.Value,\r\n                                    unit: response.PrecipitationSummary.Precipitation.Metric.Unit\r\n                                }\r\n                            ]\r\n                        };\r\n                    }             \r\n                    setCurrentCityData(cityData)\r\n                }\r\n                fetchCurrentCityConditions();\r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch current conditions\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in getting current city conditions', error);\r\n            }\r\n\r\n            try {\r\n                async function fetchDailyForecast() {                   \r\n                    const response = await weatherService.getForecastFromCity(currCity.key).then (data => data.json()).then (data => {\r\n                       return data.DailyForecasts\r\n                    })\r\n                    setDailyForecastsData(response)\r\n               }\r\n               fetchDailyForecast(); \r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch daily forecast\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in getting daily forecast', error);\r\n            }\r\n\r\n            try {\r\n                async function fetchHourlyForecast() {                   \r\n                    const response = await weatherService.getHourlyFrecast(currCity.key).then (data => data.json()).then (data => {\r\n                        return data\r\n                     })\r\n                    setHourlyForecatsData(response)\r\n                }\r\n                fetchHourlyForecast(); \r\n            } catch (error) {\r\n                toast.error(\"Failed to fetch hourly forecast\", { position: toast.POSITION.BOTTOM_LEFT })\r\n                console.log('ERR in getting hourly forecast', error);\r\n            }\r\n        }\r\n        return () => {\r\n            setCurrentCityData(null)\r\n            setDailyForecastsData([])\r\n            setHourlyForecatsData([])\r\n        }\r\n    }, [currCity,location.pathname]); \r\n\r\n    \r\n\r\n    if(!currCity||!currentCityData||dailyForecastsData.length===0||hourlyForecastData.length===0) return <Loader/>\r\n    return (\r\n       <div className=\"weather-details\">\r\n            <div className=\"desktop-search\"><Search/></div>\r\n\r\n            <div className=\"inner-container\">\r\n                <div className='current-details-section'>\r\n\r\n                    <div className='flex space-between full'>\r\n                        <Location currCity={currCity}/>\r\n\r\n                        <TemperatureParamDesktop currentCityData={currentCityData}/>\r\n\r\n                        <FavoriteBtn currCity={currCity}/>\r\n                    </div>\r\n                    <div className=\"current-conditions-container\">\r\n                        <WeatherCardPreview\r\n                        currentCityData={currentCityData}\r\n                        />\r\n\r\n                    {currentCityData.temperatureParams&&\r\n                       <div className=\"flex space-evenly temperature-params\">\r\n                           {currentCityData.temperatureParams.map((param, idx)=>\r\n                                <TemperatureParam key={idx} param={param}/>\r\n                            )}\r\n                       </div>\r\n                    }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <TemperatureConversionBtn/>\r\n                \r\n                <HourlyForecast hourlyForecastData={hourlyForecastData}/>\r\n                \r\n                <ForecastList dailyForecastsData={dailyForecastsData}/>\r\n                \r\n                \r\n            </div>\r\n\r\n\r\n       </div>\r\n    )\r\n}\r\n\r\nconst Location = ({currCity}) => {\r\n    return (\r\n        <div className=\"location flex column\">\r\n            <div className='city bold-800 title-txt'>{currCity.name},</div>\r\n            <div className='country bold-800 title-txt'>{currCity.country}</div>\r\n            <div className='date under-title-small-txt'>{getCurrentDate()}</div>\r\n        </div>\r\n    )\r\n}\r\nconst TemperatureParam = ({param}) => {\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n    return (\r\n        <div className=\"temperature-param flex column\">\r\n            <div className={`card-type-2 flex place-center justify-center ${themeState?'dark-theme':''} temperature-value `}>\r\n                <div className='icon mobile flex place-center justify-center'>\r\n                   { getParamImg(param.name)}\r\n                </div>\r\n            </div>\r\n            <div className={`fs12 bold-700 ${themeState?'dark-theme':''}`}>{param.value}{param.unit}</div>\r\n        </div>\r\n    )\r\n}\r\nconst TemperatureParamDesktop = ({currentCityData}) => { \r\n    return (\r\n        <div className='temperatureParams-desktop-wrapper flex'>\r\n        {currentCityData.temperatureParams.map((param, idx)=>\r\n            <CircularProgressBar key={idx} param={param}/>\r\n        )}\r\n       </div>\r\n    )\r\n}\r\nconst HourlyForecast = ({hourlyForecastData}) => { \r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    return (\r\n        <div className='hourly-forecast-wrapper'>\r\n            <div className=\"bold-700 title-txt margin-bottom-10px\">Today</div>\r\n                <div className={`grid hourly-forecast-list width-full space-between ${themeState?'dark':''}`}>\r\n                {\r\n                    hourlyForecastData.map(\r\n                        (hourDate,idx) =>\r\n                        <div key={idx} className={`flex column place-center hourly-forecast-preview ${themeState?'dark':''}`}>\r\n                           <div className=\"clr2\">{formatAMPM(hourDate.DateTime)}</div>\r\n                           <div className='icon-img flex place-center justify-center'>\r\n                                <img src={getWeatherIcon(hourDate.WeatherIcon)} alt=\"\" srcSet=\"\" />   \r\n                            </div>\r\n                            <div className=\"flex place-baseline\">\r\n                                <div className=\"title-txt margin-right-5px\">\r\n                                    <Temperature currentTextSize={true} value={hourDate.Temperature.Value}/>\r\n                                    </div>\r\n                                <div className=\"fs11\">\r\n                                    <Temperature currentTextSize={true} value={hourDate.RealFeelTemperature.Value}/>\r\n                                </div>\r\n                            </div>\r\n                           <div className={`text-center word-break ${themeState?'clr4':'clr6'}`}>{hourDate.IconPhrase}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import { storageService } from \"./storageService\"\r\n\r\nconst KEY = 'THEME_STATE';\r\nlet gThemeState;\r\n\r\nexport const themeService = {\r\n    query,\r\n    save\r\n}\r\n\r\nasync function query() {\r\n    gThemeState = await storageService.loadFromStorage(KEY)\r\n    if(!gThemeState){\r\n        gThemeState = false\r\n        storageService.saveToStorage(KEY, gThemeState)\r\n    }\r\n    return gThemeState\r\n}\r\n\r\n\r\nfunction save(newThemeState) {\r\n    gThemeState = newThemeState\r\n    storageService.saveToStorage(KEY, gThemeState)\r\n}\r\n\r\n","import React, { useEffect,useState,useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Temperature } from \"./TemperaturePreview\";\r\nimport { updateCurrCity,updateFavoriteCitys } from \"../store/actions/cityActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { weatherService } from \"../services/weatherService\";\r\nimport { BsThreeDots,BsTrash } from \"react-icons/bs\";\r\nimport { getWeatherIcon } from \"../utils/getWeatherIcons\";\r\nimport { toast } from 'react-toastify';\r\nimport { Loader } from \"../cmps/Loader\";\r\n\r\nexport const FavoritePreview = ({city}) => {\r\n\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n    const [cityData, setCityData] = useState(null)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const modalRef = useRef()\r\n\r\n    useEffect(() => {\r\n        try {\r\n            async function fetchCurrentCityConditions() {   \r\n                const response = await weatherService.getCurrentCityConditions(city.key).then (data => data.json()).then (data => {\r\n                    return data[0]\r\n                })\r\n                if(response){\r\n                    const currData = {\r\n                        temperature:response.Temperature.Metric.Value,\r\n                        realFeelTemperature:response.RealFeelTemperature.Metric.Value,\r\n                        weatherText:response.WeatherText,\r\n                        weatherIcon:response.WeatherIcon,\r\n                        temperatureParams:[\r\n                            {\r\n                                name:'UV',\r\n                                value:response.UVIndex,\r\n                                unit: '/10'\r\n                            },\r\n                            {\r\n                                name:'Humidity',\r\n                                value: response.RelativeHumidity,\r\n                                unit: '%'\r\n                            },\r\n                            {\r\n                                name:'Wind Gust',\r\n                                value:response.WindGust.Speed.Metric.Value,\r\n                                unit: 'km/h'\r\n                            }\r\n                        ]\r\n                    } \r\n                    setCityData(currData)\r\n                }\r\n            }\r\n            fetchCurrentCityConditions();\r\n        } catch (error) {\r\n            toast.error(\"Failed getting current conditions\", { position: toast.POSITION.BOTTOM_LEFT })\r\n            console.log('ERR in getting fav city conditions', error);\r\n        }\r\n    }, [city.key])\r\n\r\n    const onUpdateCurrCity = () => {\r\n        dispatch(updateCurrCity(city))\r\n        history.push(`/${city.name}`)\r\n    }\r\n\r\n    function onRemoveLocation(e) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        dispatch(updateFavoriteCitys(city)) \r\n        setIsOpen(false)\r\n    }\r\n\r\n    function onOpenModal() {\r\n        setIsOpen(p=>!p)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isOpen){\r\n            if(modalRef&&modalRef.current){\r\n                modalRef.current.focus()\r\n            }\r\n        }\r\n    }, [isOpen])\r\n\r\n    if(!cityData)return <Loader/>\r\n    return (\r\n        <div className='weather-card-preview favorite flex column' onClick={onUpdateCurrCity}>\r\n            <div className=\"position-relative options-container\" >\r\n                <div className={`options-btn-wrapper flex place-center ${isOpen?'active':''}`} onClick={(e)=>{\r\n                        e.preventDefault()\r\n                        e.stopPropagation()\r\n                        onOpenModal()\r\n                    }} >\r\n                    <BsThreeDots/>\r\n                </div>\r\n                {isOpen&&<div \r\n                className=\"modal\" \r\n                tabIndex=\"0\" ref={modalRef} \r\n                onBlur={()=> setIsOpen(false)} \r\n                >\r\n                    <div onClick={(e)=>onRemoveLocation(e)} className=\"delete-btn flex place-center\"><div className='margin-right-5px'>Delete</div><BsTrash/></div>\r\n                </div>}\r\n            </div>\r\n            <div className='flex space-between width-full'>\r\n                <div className={`flex column favorite-location ${themeState?'dark':''}`}>\r\n                    <div className='title-txt bold-600 space-nowrap'>{city.name},</div>\r\n                    <div>{city.country}</div>\r\n                </div>\r\n                <div className=\"weather-icon-favorite\">\r\n                    <img src={getWeatherIcon(cityData.weatherIcon)} alt=\"\" srcSet=\"\" />   \r\n                    <div className={`img-shadow-favorite ${themeState?\"dark-theme\":\"light-theme\"}`}></div>\r\n                </div>\r\n            </div>\r\n            <div className='flex space-between width-full margin-t-20'>\r\n                <div className={`curr-favorite-location-params flex`}>\r\n                    {cityData.temperatureParams.map((param, idx)=>\r\n                        <div key={idx} className='flex column param-wrapper justify-center'>\r\n                            <div className='text-center fs14'>{param.name}</div>\r\n                            <div className='text-center fs11'>{param.value}{param.unit}</div>\r\n                        </div>\r\n                    )} \r\n                </div>\r\n                <div className='fs40 bold-700 favorite-temperature'><Temperature value={cityData.temperature}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { FavoritePreview } from \"./FavoritePreview\"\r\n\r\nexport const FavoriteList = ({favoriteCitys}) => {\r\n\r\n    return (\r\n       <div className=\"favorite-list inner-container \">\r\n           {favoriteCitys.map((city,idx)=>\r\n                <FavoritePreview key={idx} city={city}/>\r\n            )}\r\n       </div>\r\n    )\r\n}","import { WeatherDetails } from './pages/WeatherDetails.jsx'\r\nimport { FavoriteCitys } from './pages/FavoriteCitys.jsx'\r\n\r\n\r\nexport const routes=[\r\n\r\n  {\r\n    path: '/',\r\n    component: WeatherDetails,\r\n  },\r\n  {\r\n    path: '/favorite',\r\n    component: FavoriteCitys,\r\n  },\r\n  {\r\n    path: '/:id',\r\n    component: WeatherDetails,\r\n  }\r\n]\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FavoriteList } from \"../cmps/FavoriteList\";\r\nimport { loadFavoriteCitys } from \"../store/actions/cityActions\";\r\n\r\nexport const FavoriteCitys = () => {\r\n\r\n    const favoriteCitys = useSelector(state => state.city.favoriteCitys);    \r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(loadFavoriteCitys())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className='favorite-page flex place-center column'>\r\n            <div className=\"title bold-800 title-txt margin-bottom-30px\">Favorite Locations</div>\r\n            {\r\n               favoriteCitys.length>0?\r\n               <FavoriteList favoriteCitys={favoriteCitys}/>\r\n               : \r\n               <div className=\" bold-700 title-txt\">No favorite citys</div>\r\n            }\r\n        </div>\r\n    )\r\n}","import { themeService } from '../../services/themeService'\r\nimport { loading, doneLoading } from './systemActions';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport function loadTheme() {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch(loading());\r\n            const themeState = await themeService.query();\r\n            dispatch({ type: 'SET_THEME', themeState })\r\n        }catch(err){\r\n            console.log('err in loading theme', err);\r\n            toast.error('Unable to load  theme background color status', { position: toast.POSITION.BOTTOM_LEFT })\r\n        }finally{\r\n            dispatch(doneLoading());\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateTheme(themeState) {\r\n\r\n  return async dispatch => {\r\n      try{\r\n          await themeService.save(themeState)\r\n          dispatch({ type: 'SET_THEME', themeState})\r\n      }catch(err){\r\n          console.log('err in updating theme', err); \r\n          toast.error('Unable to update theme background color', { position: toast.POSITION.BOTTOM_LEFT })\r\n      }\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadTheme, updateTheme } from \"../../store/actions/themeActions\";\r\n\r\nexport function ThemeToggleBtn() {\r\n\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(loadTheme())\r\n    }, [dispatch])\r\n\r\n  \r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"toggle\">\r\n\r\n                <input \r\n                className=\"toggle-input\" \r\n                type=\"checkbox\" \r\n                checked={themeState}\r\n                onChange={()=>{\r\n                    dispatch(updateTheme(!themeState))\r\n                }}\r\n                />\r\n\r\n                <div className='toggle-bg'></div>\r\n                <div className=\"toggle-switch \">\r\n                    {themeState?\r\n                        <img className='dark' src=\"https://img.icons8.com/office/25/000000/moon.png\" alt=''/>\r\n                        :\r\n                        <img className='light' src=\"https://img.icons8.com/emoji/35/000000/sun-behind-small-cloud.png\" alt=''/>\r\n                    }\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect,useState } from \"react\";\r\nimport { NavLink,useLocation } from 'react-router-dom';\r\nimport { ThemeToggleBtn } from \"./buttons/ThemeToggleBtn\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Loader } from \"./Loader\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const currCity = useSelector(state => state.city.currCity); //key\r\n    const themeState = useSelector(state => state.theme.themeState);  \r\n    const [offset, setOffset] = useState(0);\r\n    const location = useLocation();\r\n\r\n    const getWidth = () => window.innerWidth \r\n    || document.documentElement.clientWidth \r\n    || document.body.clientWidth;\r\n\r\n    // save current window width in the state object\r\n    let [width, setWidth] = useState(getWidth());\r\n\r\n    // in this case useEffect will execute only once because\r\n    // it does not have any dependencies.\r\n    useEffect(() => {\r\n       const resizeListener = () => {\r\n         // change width from the state object\r\n         setWidth(getWidth())\r\n       };\r\n       // set resize listener\r\n       window.addEventListener('resize', resizeListener);\r\n\r\n       // clean up function\r\n       return () => {\r\n         // remove resize listener\r\n         window.removeEventListener('resize', resizeListener);\r\n       }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      window.onscroll = () => {\r\n        setOffset(window.pageYOffset)\r\n      }\r\n    }, []);\r\n  \r\n    if(!currCity) return <Loader/>\r\n    return (\r\n        <div className={`navbar ${offset>0?'scroll':''}`}>\r\n            <div className='inner-navbar-container flex space-between'>\r\n                <NavLink className='logo-wrapper flex place-center' to={`/${currCity.name}`}>\r\n                    <span> Weather app </span>\r\n                </NavLink>\r\n\r\n                {width>599&&<div className={`flex place-center`}>\r\n                    <NavLink className={`navlink-btn margin-right-7px ${themeState?'dark':''} ${location.pathname === '/'?'active':''}`} to={`/${currCity.name}`}>\r\n                        home\r\n                        <span></span><span></span><span></span><span></span>\r\n                    </NavLink>\r\n                    <NavLink className={`navlink-btn margin-right-7px ${themeState?'dark':''} ${location.pathname === '/favorite'?'active':''}`} to=\"/favorite\">\r\n                        favorite\r\n                        <span></span><span></span><span></span><span></span>\r\n                    </NavLink>\r\n                    <ThemeToggleBtn/>\r\n                </div>}\r\n                {width<600&&<ThemeToggleBtn/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink,useLocation } from 'react-router-dom';\r\nimport { VscHome, VscHeart } from \"react-icons/vsc\";\r\n\r\nexport const MobileNavbar = () => {\r\n    const themeState = useSelector(state => state.theme.themeState); \r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className={`mobile-navbar ${themeState?'dark-theme':''}`}>\r\n            <div className='flex space-around place-center inner-navbar-container'>\r\n                <NavLink className={`navlink-btn flex place-center ${location.pathname === '/'&&location.pathname !== '/favorite'?'active':''}`} to=\"/\">\r\n                    <VscHome/>\r\n                </NavLink>\r\n                <NavLink className={`navlink-btn flex place-center ${location.pathname === '/favorite'?'active':''}`} to=\"/favorite\">\r\n                    <VscHeart/>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { Switch, Route } from 'react-router-dom';\nimport {routes} from './routes.js'\nimport { Navbar } from './cmps/Navbar'\nimport { MobileNavbar } from './cmps/MobileNavbar'\nimport { loadTheme } from \"./store/actions/themeActions\";\n\nexport function App() {\n\n  const themeState = useSelector(state => state.theme.themeState);  \n  const dispatch = useDispatch()\n  const location = useLocation();\n\n  useEffect(() => {\n      dispatch(loadTheme())\n  }, [dispatch])\n\n  return (\n    <div className={`App ${themeState?location.pathname === '/favorite'?'dark-desktop-favorite-page-view':'dark':location.pathname === '/favorite'?'light-desktop-favorite-page-view':'light'}`}>\n      <Navbar/>\n      <Switch>\n        { routes.map(route => <Route key={ route.path } exact component={ route.component } path={ route.path } />) }\n      </Switch>\n      <MobileNavbar/>\n      <ToastContainer />\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { store } from './store/store'\nimport { App } from './App.jsx'\nimport './assets/styles/global.scss'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}